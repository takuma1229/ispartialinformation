/content/drive/MyDrive/research_discourse_relation/discourse_relation_explainability
num_added_tokens: 16, added_special_tokens: <NOUN>,<PRONOUN>,<ADJECTIVAL-NOUN>,<PRENOUN-ADJECTIVAL>,<ADVERB>,<CONJUNCTION>,<INTERJECTION>,<VERB>,<ADJECTIVE>,<AUXILIARY-VERB>,<PARTICLE>,<PREFIX>,<SUFFIX>,<SYMBOL>,<AUXILIARY-SYMBOL>,<BLANK>
Some weights of BertForSequenceClassification were not initialized from the model checkpoint at cl-tohoku/bert-base-japanese-v3 and are newly initialized: ['classifier.bias', 'classifier.weight']
You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.
  0%|          | 0/11 [00:00<?, ?it/s]/usr/lib/python3.10/multiprocessing/popen_fork.py:66: RuntimeWarning: os.fork() was called. os.fork() is incompatible with multithreaded code, and JAX is multithreaded, so this will likely lead to a deadlock.
  self.pid = os.fork()
  0%|          | 0/11 [00:00<?, ?it/s]/usr/lib/python3.10/multiprocessing/popen_fork.py:66: RuntimeWarning: os.fork() was called. os.fork() is incompatible with multithreaded code, and JAX is multithreaded, so this will likely lead to a deadlock.
  self.pid = os.fork()
  0%|          | 0/15 [00:00<?, ?it/s]/usr/lib/python3.10/multiprocessing/popen_fork.py:66: RuntimeWarning: os.fork() was called. os.fork() is incompatible with multithreaded code, and JAX is multithreaded, so this will likely lead to a deadlock.
  self.pid = os.fork()[00:00<?, ?it/s]
 14%|█▍        | 12/84 [00:01<00:08,  8.30it/s]
epoch: None 	loss: 0.065219   	accuracy: 0.2575 	precision: 0.1848 	recall: 0.2304 	f1: 0.1233





  self.pid = os.fork()[00:00<?, ?it/s]
                                      /usr/lib/python3.10/multiprocessing/popen_fork.py:66: RuntimeWarning: os.fork() was called. os.fork() is incompatible with multithreaded code, and JAX is multithreaded, so this will likely lead to a deadlock.
  self.pid = os.fork()[00:00<?, ?it/s]
  0%|          | 0/15 [00:13<?, ?it/s]
epoch: 0 	loss: 0.006990   	accuracy: 0.6315 	precision: 0.2488 	recall: 0.1819 	f1: 0.1858
epoch: 0 	loss: 0.057570   	accuracy: 0.5808 	precision: 0.2197 	recall: 0.1708 	f1: 0.1701
  7%|▋         | 1/15 [00:13<03:13, 13/usr/lib/python3.10/multiprocessing/popen_fork.py:66: RuntimeWarning: os.fork() was called. os.fork() is incompatible with multithreaded code, and JAX is multithreaded, so this will likely lead to a deadlock.
  self.pid = os.fork()[00:00<?, ?it/s]





  self.pid = os.fork()[00:00<?, ?it/s]
                                      /usr/lib/python3.10/multiprocessing/popen_fork.py:66: RuntimeWarning: os.fork() was called. os.fork() is incompatible with multithreaded code, and JAX is multithreaded, so this will likely lead to a deadlock.
  self.pid = os.fork()[00:00<?, ?it/s]
 13%|█▎        | 2/15 [00:27<02:57, 13/usr/lib/python3.10/multiprocessing/popen_fork.py:66: RuntimeWarning: os.fork() was called. os.fork() is incompatible with multithreaded code, and JAX is multithreaded, so this will likely lead to a deadlock.
  self.pid = os.fork()[00:00<?, ?it/s]
  1%|          | 1/84 [00:00<00:31,  2.67it/s]
epoch: 1 	loss: 0.005541   	accuracy: 0.7506 	precision: 0.3176 	recall: 0.2057 	f1: 0.1846
epoch: 1 	loss: 0.048685   	accuracy: 0.7066 	precision: 0.1430 	recall: 0.1967 	f1: 0.1656





  self.pid = os.fork()[00:00<?, ?it/s]
  self.pid = os.fork()[00:00<?, ?it/s]
 20%|██        | 3/15 [00:40<02:41, 13/usr/lib/python3.10/multiprocessing/popen_fork.py:66: RuntimeWarning: os.fork() was called. os.fork() is incompatible with multithreaded code, and JAX is multithreaded, so this will likely lead to a deadlock.
  self.pid = os.fork()[00:00<?, ?it/s]
 10%|▉         | 8/84 [00:01<00:10,  7.11it/s]
epoch: 2 	loss: 0.004717   	accuracy: 0.7491 	precision: 0.3505 	recall: 0.2025 	f1: 0.1776
epoch: 2 	loss: 0.043308   	accuracy: 0.7186 	precision: 0.1437 	recall: 0.2000 	f1: 0.1672





  self.pid = os.fork()[00:00<?, ?it/s]
                                      /usr/lib/python3.10/multiprocessing/popen_fork.py:66: RuntimeWarning: os.fork() was called. os.fork() is incompatible with multithreaded code, and JAX is multithreaded, so this will likely lead to a deadlock.
  self.pid = os.fork()[00:00<?, ?it/s]
 27%|██▋       | 4/15 [00:53<02:26, 13/usr/lib/python3.10/multiprocessing/popen_fork.py:66: RuntimeWarning: os.fork() was called. os.fork() is incompatible with multithreaded code, and JAX is multithreaded, so this will likely lead to a deadlock.
  self.pid = os.fork()[00:00<?, ?it/s]
epoch: 3 	loss: 0.004237   	accuracy: 0.7483 	precision: 0.1505 	recall: 0.1994 	f1: 0.1715
epoch: 3 	loss: 0.039558   	accuracy: 0.7186 	precision: 0.1437 	recall: 0.2000 	f1: 0.1672
epoch: 3 	loss: 0.050075   	accuracy: 0.6607 	precision: 0.1321 	recall: 0.2000 	f1: 0.1591




  self.pid = os.fork()[00:00<?, ?it/s]
  self.pid = os.fork()[00:00<?, ?it/s]
 33%|███▎      | 5/15 [01:07<02:13, 13/usr/lib/python3.10/multiprocessing/popen_fork.py:66: RuntimeWarning: os.fork() was called. os.fork() is incompatible with multithreaded code, and JAX is multithreaded, so this will likely lead to a deadlock.
  self.pid = os.fork()[00:00<?, ?it/s]
  6%|▌         | 5/84 [00:00<00:10,  7.46it/s]
epoch: 4 	loss: 0.004000   	accuracy: 0.7491 	precision: 0.1504 	recall: 0.1996 	f1: 0.1715
epoch: 4 	loss: 0.037104   	accuracy: 0.7186 	precision: 0.1437 	recall: 0.2000 	f1: 0.1672





  self.pid = os.fork()[00:00<?, ?it/s]
                                      /usr/lib/python3.10/multiprocessing/popen_fork.py:66: RuntimeWarning: os.fork() was called. os.fork() is incompatible with multithreaded code, and JAX is multithreaded, so this will likely lead to a deadlock.
  self.pid = os.fork()[00:00<?, ?it/s]
  self.pid = os.fork()[00:00<?, ?it/s]
 14%|█▍        | 12/84 [00:01<00:08,  8.34it/s]
epoch: 5 	loss: 0.003821   	accuracy: 0.7498 	precision: 0.1838 	recall: 0.2005 	f1: 0.1734
epoch: 5 	loss: 0.035832   	accuracy: 0.7186 	precision: 0.1437 	recall: 0.2000 	f1: 0.1672





  self.pid = os.fork()[00:00<?, ?it/s]
                                      /usr/lib/python3.10/multiprocessing/popen_fork.py:66: RuntimeWarning: os.fork() was called. os.fork() is incompatible with multithreaded code, and JAX is multithreaded, so this will likely lead to a deadlock.
  self.pid = os.fork()[00:00<?, ?it/s]
 47%|████▋     | 7/15 [01:33<01:45, 13/usr/lib/python3.10/multiprocessing/popen_fork.py:66: RuntimeWarning: os.fork() was called. os.fork() is incompatible with multithreaded code, and JAX is multithreaded, so this will likely lead to a deadlock.
  self.pid = os.fork()[00:00<?, ?it/s]
  4%|▎         | 3/84 [00:00<00:12,  6.49it/s]
epoch: 6 	loss: 0.003713   	accuracy: 0.7498 	precision: 0.1838 	recall: 0.2005 	f1: 0.1734
epoch: 6 	loss: 0.034618   	accuracy: 0.7186 	precision: 0.1437 	recall: 0.2000 	f1: 0.1672





  self.pid = os.fork()[00:00<?, ?it/s]
                                      /usr/lib/python3.10/multiprocessing/popen_fork.py:66: RuntimeWarning: os.fork() was called. os.fork() is incompatible with multithreaded code, and JAX is multithreaded, so this will likely lead to a deadlock.
  self.pid = os.fork()[00:00<?, ?it/s]
 53%|█████▎    | 8/15 [01:46<01:32, 13/usr/lib/python3.10/multiprocessing/popen_fork.py:66: RuntimeWarning: os.fork() was called. os.fork() is incompatible with multithreaded code, and JAX is multithreaded, so this will likely lead to a deadlock.
  self.pid = os.fork()[00:00<?, ?it/s]
 12%|█▏        | 10/84 [00:01<00:09,  8.20it/s]
epoch: 7 	loss: 0.003637   	accuracy: 0.7498 	precision: 0.1838 	recall: 0.2005 	f1: 0.1734
epoch: 7 	loss: 0.033879   	accuracy: 0.7186 	precision: 0.1437 	recall: 0.2000 	f1: 0.1672





  self.pid = os.fork()[00:00<?, ?it/s]
                                      /usr/lib/python3.10/multiprocessing/popen_fork.py:66: RuntimeWarning: os.fork() was called. os.fork() is incompatible with multithreaded code, and JAX is multithreaded, so this will likely lead to a deadlock.
  self.pid = os.fork()[00:00<?, ?it/s]
 60%|██████    | 9/15 [02:00<01:19, 13/usr/lib/python3.10/multiprocessing/popen_fork.py:66: RuntimeWarning: os.fork() was called. os.fork() is incompatible with multithreaded code, and JAX is multithreaded, so this will likely lead to a deadlock.
  self.pid = os.fork()[00:00<?, ?it/s]
epoch: 8 	loss: 0.003573   	accuracy: 0.7498 	precision: 0.1838 	recall: 0.2005 	f1: 0.1734
 18%|█▊        | 15/84 [00:01<00:07,  8.91it/s]
epoch: 8 	loss: 0.033127   	accuracy: 0.7186 	precision: 0.1437 	recall: 0.2000 	f1: 0.1672




  self.pid = os.fork()[00:00<?, ?it/s]
  self.pid = os.fork()[00:00<?, ?it/s]
 67%|██████▋   | 10/15 [02:13<01:06, 1/usr/lib/python3.10/multiprocessing/popen_fork.py:66: RuntimeWarning: os.fork() was called. os.fork() is incompatible with multithreaded code, and JAX is multithreaded, so this will likely lead to a deadlock.
  self.pid = os.fork()[00:00<?, ?it/s]
  6%|▌         | 5/84 [00:00<00:10,  7.53it/s]
epoch: 9 	loss: 0.003520   	accuracy: 0.7498 	precision: 0.1838 	recall: 0.2005 	f1: 0.1734
epoch: 9 	loss: 0.032662   	accuracy: 0.7186 	precision: 0.1437 	recall: 0.2000 	f1: 0.1672





  self.pid = os.fork()[00:00<?, ?it/s]
                                      /usr/lib/python3.10/multiprocessing/popen_fork.py:66: RuntimeWarning: os.fork() was called. os.fork() is incompatible with multithreaded code, and JAX is multithreaded, so this will likely lead to a deadlock.
  self.pid = os.fork()[00:00<?, ?it/s]
  self.pid = os.fork()[00:00<?, ?it/s]
 15%|█▌        | 13/84 [00:01<00:08,  8.62it/s]
epoch: 10 	loss: 0.003462   	accuracy: 0.7506 	precision: 0.2077 	recall: 0.2014 	f1: 0.1752
epoch: 10 	loss: 0.032186   	accuracy: 0.7186 	precision: 0.1437 	recall: 0.2000 	f1: 0.1672





  self.pid = os.fork()[00:00<?, ?it/s]
                                      /usr/lib/python3.10/multiprocessing/popen_fork.py:66: RuntimeWarning: os.fork() was called. os.fork() is incompatible with multithreaded code, and JAX is multithreaded, so this will likely lead to a deadlock.
  self.pid = os.fork()[00:00<?, ?it/s]
 80%|████████  | 12/15 [02:39<00:39, 1/usr/lib/python3.10/multiprocessing/popen_fork.py:66: RuntimeWarning: os.fork() was called. os.fork() is incompatible with multithreaded code, and JAX is multithreaded, so this will likely lead to a deadlock.
  self.pid = os.fork()[00:00<?, ?it/s]
  1%|          | 1/84 [00:00<00:29,  2.83it/s]
epoch: 11 	loss: 0.003440   	accuracy: 0.7513 	precision: 0.2308 	recall: 0.2031 	f1: 0.1787
epoch: 11 	loss: 0.031937   	accuracy: 0.7186 	precision: 0.1437 	recall: 0.2000 	f1: 0.1672





  self.pid = os.fork()[00:00<?, ?it/s]
                                      /usr/lib/python3.10/multiprocessing/popen_fork.py:66: RuntimeWarning: os.fork() was called. os.fork() is incompatible with multithreaded code, and JAX is multithreaded, so this will likely lead to a deadlock.
  self.pid = os.fork()[00:00<?, ?it/s]
 87%|████████▋ | 13/15 [02:52<00:26, 1/usr/lib/python3.10/multiprocessing/popen_fork.py:66: RuntimeWarning: os.fork() was called. os.fork() is incompatible with multithreaded code, and JAX is multithreaded, so this will likely lead to a deadlock.
  self.pid = os.fork()[00:00<?, ?it/s]
 12%|█▏        | 10/84 [00:01<00:09,  8.16it/s]
epoch: 12 	loss: 0.003421   	accuracy: 0.7528 	precision: 0.2510 	recall: 0.2049 	f1: 0.1823
epoch: 12 	loss: 0.031820   	accuracy: 0.7186 	precision: 0.1437 	recall: 0.2000 	f1: 0.1672





  self.pid = os.fork()[00:00<?, ?it/s]
                                      /usr/lib/python3.10/multiprocessing/popen_fork.py:66: RuntimeWarning: os.fork() was called. os.fork() is incompatible with multithreaded code, and JAX is multithreaded, so this will likely lead to a deadlock.
  self.pid = os.fork()[00:00<?, ?it/s]
 93%|█████████▎| 14/15 [03:05<00:13, 1/usr/lib/python3.10/multiprocessing/popen_fork.py:66: RuntimeWarning: os.fork() was called. os.fork() is incompatible with multithreaded code, and JAX is multithreaded, so this will likely lead to a deadlock.
  self.pid = os.fork()[00:00<?, ?it/s]
epoch: 13 	loss: 0.003397   	accuracy: 0.7528 	precision: 0.2314 	recall: 0.2049 	f1: 0.1824
epoch: 13 	loss: 0.031731   	accuracy: 0.7186 	precision: 0.1437 	recall: 0.2000 	f1: 0.1672
epoch: 13 	loss: 0.043708   	accuracy: 0.6607 	precision: 0.1321 	recall: 0.2000 	f1: 0.1591




  self.pid = os.fork()[00:00<?, ?it/s]
  self.pid = os.fork()[00:00<?, ?it/s]
100%|██████████| 15/15 [03:19<00:00, 13.27s/it]
  0%|          | 0/11 [00:00<?, ?it/s]/usr/lib/python3.10/multiprocessing/popen_fork.py:66: RuntimeWarning: os.fork() was called. os.fork() is incompatible with multithreaded code, and JAX is multithreaded, so this will likely lead to a deadlock.
  self.pid = os.fork()
  0%|          | 0/11 [00:00<?, ?it/s]/usr/lib/python3.10/multiprocessing/popen_fork.py:66: RuntimeWarning: os.fork() was called. os.fork() is incompatible with multithreaded code, and JAX is multithreaded, so this will likely lead to a deadlock.
  self.pid = os.fork()
  9%|▉         | 1/11 [00:00<00:03,  3.29it/s]
epoch: 14 	loss: 0.003393   	accuracy: 0.7528 	precision: 0.2314 	recall: 0.2049 	f1: 0.1824
epoch: 14 	loss: 0.031703   	accuracy: 0.7186 	precision: 0.1437 	recall: 0.2000 	f1: 0.1672

epoch: 14 	loss: 0.043658   	accuracy: 0.6607 	precision: 0.1321 	recall: 0.2000 	f1: 0.1591
OptimizedModule(
  (_orig_mod): BertForSequenceClassification(
    (bert): BertModel(
      (embeddings): BertEmbeddings(
        (word_embeddings): Embedding(32784, 768)
        (position_embeddings): Embedding(512, 768)
        (token_type_embeddings): Embedding(2, 768)
        (LayerNorm): LayerNorm((768,), eps=1e-12, elementwise_affine=True)
        (dropout): Dropout(p=0.1, inplace=False)
      )
      (encoder): BertEncoder(
        (layer): ModuleList(
          (0-11): 12 x BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1, inplace=False)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm((768,), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1, inplace=False)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
              (intermediate_act_fn): GELUActivation()
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm((768,), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
          )
        )
      )
      (pooler): BertPooler(
        (dense): Linear(in_features=768, out_features=768, bias=True)
        (activation): Tanh()
      )
    )
    (dropout): Dropout(p=0.1, inplace=False)
    (classifier): Linear(in_features=768, out_features=5, bias=True)
  )
)
<class 'torch._dynamo.eval_frame.OptimizedModule'>
<class 'transformers.models.bert.modeling_bert.BertForSequenceClassification'>