
/content/drive/MyDrive/research_discourse_relation/discourse_relation_explainability
/usr/local/lib/python3.10/dist-packages/huggingface_hub/utils/_token.py:88: UserWarning:
The secret `HF_TOKEN` does not exist in your Colab secrets.
To authenticate with the Hugging Face Hub, create a token in your settings tab (https://huggingface.co/settings/tokens), set it as secret in your Google Colab and restart your session.
You will be able to reuse this secret in all of your notebooks.
Please note that authentication is recommended but still optional to access public models or datasets.
  warnings.warn(
num_added_tokens: 16, added_special_tokens: <NOUN>,<PRONOUN>,<ADJECTIVAL-NOUN>,<PRENOUN-ADJECTIVAL>,<ADVERB>,<CONJUNCTION>,<INTERJECTION>,<VERB>,<ADJECTIVE>,<AUXILIARY-VERB>,<PARTICLE>,<PREFIX>,<SUFFIX>,<SYMBOL>,<AUXILIARY-SYMBOL>,<BLANK>
Some weights of BertForSequenceClassification were not initialized from the model checkpoint at cl-tohoku/bert-base-japanese-v3 and are newly initialized: ['classifier.bias', 'classifier.weight']
You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.
/usr/lib/python3.10/multiprocessing/popen_fork.py:66: RuntimeWarning: os.fork() was called. os.fork() is incompatible with multithreaded code, and JAX is multithreaded, so this will likely lead to a deadlock.
  self.pid = os.fork()



  0%|          | 0/15 [00:00<?, ?it/s]/usr/lib/python3.10/multiprocessing/popen_fork.py:66: RuntimeWarning: os.fork() was called. os.fork() is incompatible with multithreaded code, and JAX is multithreaded, so this will likely lead to a deadlock.
  self.pid = os.fork()[00:00<?, ?it/s]
loss: 0.065226   	accuracy: 0.2575 	precision: 0.1848 	recall: 0.2304 	f1: 0.1233




  self.pid = os.fork()[00:00<?, ?it/s]

  self.pid = os.fork()[00:00<?, ?it/s]
  7%|▋         | 1/15 [01:42<23:48, 10/usr/lib/python3.10/multiprocessing/popen_fork.py:66: RuntimeWarning: os.fork() was called. os.fork() is incompatible with multithreaded code, and JAX is multithreaded, so this will likely lead to a deadlock.
  self.pid = os.fork()[00:00<?, ?it/s]
  4%|▎         | 3/84 [00:00<00:13,  6.13it/s]
loss: 0.004164   	accuracy: 0.7506 	precision: 0.1501 	recall: 0.2000 	f1: 0.1715






  self.pid = os.fork()[00:00<?, ?it/s]
 13%|█▎        | 2/15 [01:55<10:52, 50/usr/lib/python3.10/multiprocessing/popen_fork.py:66: RuntimeWarning: os.fork() was called. os.fork() is incompatible with multithreaded code, and JAX is multithreaded, so this will likely lead to a deadlock.
  self.pid = os.fork()[00:00<?, ?it/s]
  5%|▍         | 4/84 [00:00<00:12,  6.49it/s]
loss: 0.003504   	accuracy: 0.7506 	precision: 0.1501 	recall: 0.2000 	f1: 0.1715






  self.pid = os.fork()[00:00<?, ?it/s]
 20%|██        | 3/15 [02:09<06:43, 33/usr/lib/python3.10/multiprocessing/popen_fork.py:66: RuntimeWarning: os.fork() was called. os.fork() is incompatible with multithreaded code, and JAX is multithreaded, so this will likely lead to a deadlock.
  self.pid = os.fork()[00:00<?, ?it/s]
  6%|▌         | 5/84 [00:00<00:11,  6.72it/s]
loss: 0.003261   	accuracy: 0.7506 	precision: 0.1501 	recall: 0.2000 	f1: 0.1715






  self.pid = os.fork()[00:00<?, ?it/s]
 27%|██▋       | 4/15 [02:23<04:44, 25/usr/lib/python3.10/multiprocessing/popen_fork.py:66: RuntimeWarning: os.fork() was called. os.fork() is incompatible with multithreaded code, and JAX is multithreaded, so this will likely lead to a deadlock.
  self.pid = os.fork()[00:00<?, ?it/s]
  6%|▌         | 5/84 [00:00<00:11,  6.70it/s]
loss: 0.003193   	accuracy: 0.7506 	precision: 0.1501 	recall: 0.2000 	f1: 0.1715






  self.pid = os.fork()[00:00<?, ?it/s]
 33%|███▎      | 5/15 [02:38<03:36, 21/usr/lib/python3.10/multiprocessing/popen_fork.py:66: RuntimeWarning: os.fork() was called. os.fork() is incompatible with multithreaded code, and JAX is multithreaded, so this will likely lead to a deadlock.
  self.pid = os.fork()[00:00<?, ?it/s]
  5%|▍         | 4/84 [00:00<00:12,  6.38it/s]
loss: 0.003163   	accuracy: 0.7506 	precision: 0.1501 	recall: 0.2000 	f1: 0.1715






  self.pid = os.fork()[00:00<?, ?it/s]
 40%|████      | 6/15 [02:52<02:51, 19/usr/lib/python3.10/multiprocessing/popen_fork.py:66: RuntimeWarning: os.fork() was called. os.fork() is incompatible with multithreaded code, and JAX is multithreaded, so this will likely lead to a deadlock.
  self.pid = os.fork()[00:00<?, ?it/s]
  5%|▍         | 4/84 [00:00<00:12,  6.44it/s]
loss: 0.003209   	accuracy: 0.7506 	precision: 0.1501 	recall: 0.2000 	f1: 0.1715






  self.pid = os.fork()[00:00<?, ?it/s]
 47%|████▋     | 7/15 [03:06<02:20, 17/usr/lib/python3.10/multiprocessing/popen_fork.py:66: RuntimeWarning: os.fork() was called. os.fork() is incompatible with multithreaded code, and JAX is multithreaded, so this will likely lead to a deadlock.
  self.pid = os.fork()[00:00<?, ?it/s]
  2%|▏         | 2/84 [00:00<00:15,  5.16it/s]
loss: 0.003227   	accuracy: 0.7506 	precision: 0.1501 	recall: 0.2000 	f1: 0.1715






  self.pid = os.fork()[00:00<?, ?it/s]
 53%|█████▎    | 8/15 [03:20<01:55, 16/usr/lib/python3.10/multiprocessing/popen_fork.py:66: RuntimeWarning: os.fork() was called. os.fork() is incompatible with multithreaded code, and JAX is multithreaded, so this will likely lead to a deadlock.
  self.pid = os.fork()[00:00<?, ?it/s]
loss: 0.003232   	accuracy: 0.7506 	precision: 0.1501 	recall: 0.2000 	f1: 0.1715
loss: 0.029932   	accuracy: 0.7186 	precision: 0.1437 	recall: 0.2000 	f1: 0.1672





  self.pid = os.fork()[00:00<?, ?it/s]
 60%|██████    | 9/15 [03:34<01:34, 15/usr/lib/python3.10/multiprocessing/popen_fork.py:66: RuntimeWarning: os.fork() was called. os.fork() is incompatible with multithreaded code, and JAX is multithreaded, so this will likely lead to a deadlock.
  self.pid = os.fork()[00:00<?, ?it/s]
loss: 0.003215   	accuracy: 0.7506 	precision: 0.1501 	recall: 0.2000 	f1: 0.1715
loss: 0.030158   	accuracy: 0.7186 	precision: 0.1437 	recall: 0.2000 	f1: 0.1672





  self.pid = os.fork()[00:00<?, ?it/s]
  9%|▉         | 1/11 [00:00<00:02,  4.38it/s]
loss: 0.003214   	accuracy: 0.7506 	precision: 0.1501 	recall: 0.2000 	f1: 0.1715
  self.pid = os.fork()[00:00<?, ?it/s]






  self.pid = os.fork()[00:00<?, ?it/s]
 73%|███████▎  | 11/15 [04:03<01:00, 1/usr/lib/python3.10/multiprocessing/popen_fork.py:66: RuntimeWarning: os.fork() was called. os.fork() is incompatible with multithreaded code, and JAX is multithreaded, so this will likely lead to a deadlock.
  self.pid = os.fork()[00:00<?, ?it/s]
  8%|▊         | 7/84 [00:01<00:10,  7.57it/s]
loss: 0.003227   	accuracy: 0.7506 	precision: 0.1501 	recall: 0.2000 	f1: 0.1715






  self.pid = os.fork()[00:00<?, ?it/s]
 80%|████████  | 12/15 [04:18<00:44, 1/usr/lib/python3.10/multiprocessing/popen_fork.py:66: RuntimeWarning: os.fork() was called. os.fork() is incompatible with multithreaded code, and JAX is multithreaded, so this will likely lead to a deadlock.
  self.pid = os.fork()[00:00<?, ?it/s]
  5%|▍         | 4/84 [00:00<00:12,  6.29it/s]
loss: 0.003314   	accuracy: 0.7506 	precision: 0.1501 	recall: 0.2000 	f1: 0.1715






  self.pid = os.fork()[00:00<?, ?it/s]
 87%|████████▋ | 13/15 [04:32<00:29, 1/usr/lib/python3.10/multiprocessing/popen_fork.py:66: RuntimeWarning: os.fork() was called. os.fork() is incompatible with multithreaded code, and JAX is multithreaded, so this will likely lead to a deadlock.
  self.pid = os.fork()[00:00<?, ?it/s]
  1%|          | 1/84 [00:00<00:29,  2.86it/s]
loss: 0.003420   	accuracy: 0.7506 	precision: 0.1501 	recall: 0.2000 	f1: 0.1715






  self.pid = os.fork()[00:00<?, ?it/s]
 87%|████████▋ | 13/15 [04:47<00:29, 14.75s/it]
loss: 0.003418   	accuracy: 0.7506 	precision: 0.1501 	recall: 0.2000 	f1: 0.1715
 93%|█████████▎| 14/15 [04:47<00:14, 1/usr/lib/python3.10/multiprocessing/popen_fork.py:66: RuntimeWarning: os.fork() was called. os.fork() is incompatible with multithreaded code, and JAX is multithreaded, so this will likely lead to a deadlock.
  self.pid = os.fork()[00:00<?, ?it/s]






  self.pid = os.fork()[00:00<?, ?it/s]
100%|██████████| 15/15 [05:01<00:00, 20.12s/it]
  0%|          | 0/11 [00:00<?, ?it/s]/usr/lib/python3.10/multiprocessing/popen_fork.py:66: RuntimeWarning: os.fork() was called. os.fork() is incompatible with multithreaded code, and JAX is multithreaded, so this will likely lead to a deadlock.
  self.pid = os.fork()
  0%|          | 0/11 [00:00<?, ?it/s]/usr/lib/python3.10/multiprocessing/popen_fork.py:66: RuntimeWarning: os.fork() was called. os.fork() is incompatible with multithreaded code, and JAX is multithreaded, so this will likely lead to a deadlock.
  self.pid = os.fork()
loss: 0.003502   	accuracy: 0.7506 	precision: 0.1501 	recall: 0.2000 	f1: 0.1715
loss: 0.030381   	accuracy: 0.7186 	precision: 0.1437 	recall: 0.2000 	f1: 0.1672
  0%|          | 0/11 [00:00<?, ?it/s]/usr/lib/python3.10/multiprocessing/popen_fork.py:66: RuntimeWarning: os.fork() was called. os.fork() is incompatible with multithreaded code, and JAX is multithreaded, so this will likely lead to a deadlock.
  self.pid = os.fork()
OptimizedModule(
  (_orig_mod): BertForSequenceClassification(
    (bert): BertModel(
      (embeddings): BertEmbeddings(
        (word_embeddings): Embedding(32784, 768)
        (position_embeddings): Embedding(512, 768)
        (token_type_embeddings): Embedding(2, 768)
        (LayerNorm): LayerNorm((768,), eps=1e-12, elementwise_affine=True)
        (dropout): Dropout(p=0.1, inplace=False)
      )
      (encoder): BertEncoder(
        (layer): ModuleList(
          (0-11): 12 x BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1, inplace=False)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm((768,), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1, inplace=False)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
              (intermediate_act_fn): GELUActivation()
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm((768,), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
          )
        )
      )
      (pooler): BertPooler(
        (dense): Linear(in_features=768, out_features=768, bias=True)
        (activation): Tanh()
      )
    )
    (dropout): Dropout(p=0.1, inplace=False)
    (classifier): Linear(in_features=768, out_features=5, bias=True)
  )
)
<class 'torch._dynamo.eval_frame.OptimizedModule'>
<class 'transformers.models.bert.modeling_bert.BertForSequenceClassification'>
No traceback available to show.