/content/drive/MyDrive/research_discourse_relation/discourse_relation_explainability
num_added_tokens: 16, added_special_tokens: <NOUN>,<PRONOUN>,<ADJECTIVAL-NOUN>,<PRENOUN-ADJECTIVAL>,<ADVERB>,<CONJUNCTION>,<INTERJECTION>,<VERB>,<ADJECTIVE>,<AUXILIARY-VERB>,<PARTICLE>,<PREFIX>,<SUFFIX>,<SYMBOL>,<AUXILIARY-SYMBOL>,<BLANK>
Some weights of BertForSequenceClassification were not initialized from the model checkpoint at cl-tohoku/bert-base-japanese-v3 and are newly initialized: ['classifier.bias', 'classifier.weight']
You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.
  0%|          | 0/11 [00:00<?, ?it/s]/usr/lib/python3.10/multiprocessing/popen_fork.py:66: RuntimeWarning: os.fork() was called. os.fork() is incompatible with multithreaded code, and JAX is multithreaded, so this will likely lead to a deadlock.
  self.pid = os.fork()



  0%|          | 0/11 [00:00<?, ?it/s]/usr/lib/python3.10/multiprocessing/popen_fork.py:66: RuntimeWarning: os.fork() was called. os.fork() is incompatible with multithreaded code, and JAX is multithreaded, so this will likely lead to a deadlock.
  self.pid = os.fork()
  0%|          | 0/20 [00:00<?, ?it/s]/usr/lib/python3.10/multiprocessing/popen_fork.py:66: RuntimeWarning: os.fork() was called. os.fork() is incompatible with multithreaded code, and JAX is multithreaded, so this will likely lead to a deadlock.
  self.pid = os.fork()[00:00<?, ?it/s]
epoch: None 	loss: 0.064803   	accuracy: 0.1257 	precision: 0.1622 	recall: 0.3158 	f1: 0.0973
epoch: None 	loss: 0.082575   	accuracy: 0.1131 	precision: 0.1674 	recall: 0.0893 	f1: 0.0782




  self.pid = os.fork()[00:00<?, ?it/s]

  self.pid = os.fork()[00:00<?, ?it/s]
                                      /usr/lib/python3.10/multiprocessing/popen_fork.py:66: RuntimeWarning: os.fork() was called. os.fork() is incompatible with multithreaded code, and JAX is multithreaded, so this will likely lead to a deadlock.
  self.pid = os.fork()[00:00<?, ?it/s]
  0%|          | 0/20 [01:45<?, ?it/s]
epoch: 0 	loss: 0.003115   	accuracy: 0.7506 	precision: 0.1501 	recall: 0.2000 	f1: 0.1715
epoch: 0 	loss: 0.027104   	accuracy: 0.7186 	precision: 0.1437 	recall: 0.2000 	f1: 0.1672
  5%|▌         | 1/20 [01:45<33:29, 10/usr/lib/python3.10/multiprocessing/popen_fork.py:66: RuntimeWarning: os.fork() was called. os.fork() is incompatible with multithreaded code, and JAX is multithreaded, so this will likely lead to a deadlock.
  self.pid = os.fork()[00:00<?, ?it/s]






  self.pid = os.fork()[00:00<?, ?it/s]
                                      /usr/lib/python3.10/multiprocessing/popen_fork.py:66: RuntimeWarning: os.fork() was called. os.fork() is incompatible with multithreaded code, and JAX is multithreaded, so this will likely lead to a deadlock.
  self.pid = os.fork()[00:00<?, ?it/s]
 10%|█         | 2/20 [02:02<15:57, 53/usr/lib/python3.10/multiprocessing/popen_fork.py:66: RuntimeWarning: os.fork() was called. os.fork() is incompatible with multithreaded code, and JAX is multithreaded, so this will likely lead to a deadlock.
  self.pid = os.fork()[00:00<?, ?it/s]
  8%|▊         | 7/84 [00:01<00:11,  6.83it/s]
epoch: 1 	loss: 0.002990   	accuracy: 0.7506 	precision: 0.1501 	recall: 0.2000 	f1: 0.1715
epoch: 1 	loss: 0.023897   	accuracy: 0.7186 	precision: 0.1437 	recall: 0.2000 	f1: 0.1672






  self.pid = os.fork()[00:00<?, ?it/s]
                                      /usr/lib/python3.10/multiprocessing/popen_fork.py:66: RuntimeWarning: os.fork() was called. os.fork() is incompatible with multithreaded code, and JAX is multithreaded, so this will likely lead to a deadlock.
  self.pid = os.fork()[00:00<?, ?it/s]
 15%|█▌        | 3/20 [02:18<10:17, 36/usr/lib/python3.10/multiprocessing/popen_fork.py:66: RuntimeWarning: os.fork() was called. os.fork() is incompatible with multithreaded code, and JAX is multithreaded, so this will likely lead to a deadlock.
  self.pid = os.fork()[00:00<?, ?it/s]
  7%|▋         | 6/84 [00:01<00:12,  6.29it/s]
epoch: 2 	loss: 0.003251   	accuracy: 0.7506 	precision: 0.1501 	recall: 0.2000 	f1: 0.1715
epoch: 2 	loss: 0.029836   	accuracy: 0.7186 	precision: 0.1437 	recall: 0.2000 	f1: 0.1672






  self.pid = os.fork()[00:00<?, ?it/s]
                                      /usr/lib/python3.10/multiprocessing/popen_fork.py:66: RuntimeWarning: os.fork() was called. os.fork() is incompatible with multithreaded code, and JAX is multithreaded, so this will likely lead to a deadlock.
  self.pid = os.fork()[00:00<?, ?it/s]
 20%|██        | 4/20 [02:34<07:32, 28/usr/lib/python3.10/multiprocessing/popen_fork.py:66: RuntimeWarning: os.fork() was called. os.fork() is incompatible with multithreaded code, and JAX is multithreaded, so this will likely lead to a deadlock.
  self.pid = os.fork()[00:00<?, ?it/s]
  8%|▊         | 7/84 [00:01<00:10,  7.03it/s]
epoch: 3 	loss: 0.003129   	accuracy: 0.7506 	precision: 0.1501 	recall: 0.2000 	f1: 0.1715
epoch: 3 	loss: 0.030981   	accuracy: 0.7186 	precision: 0.1437 	recall: 0.2000 	f1: 0.1672






  self.pid = os.fork()[00:00<?, ?it/s]
                                      /usr/lib/python3.10/multiprocessing/popen_fork.py:66: RuntimeWarning: os.fork() was called. os.fork() is incompatible with multithreaded code, and JAX is multithreaded, so this will likely lead to a deadlock.
  self.pid = os.fork()[00:00<?, ?it/s]
epoch: 4 	loss: 0.003310   	accuracy: 0.7506 	precision: 0.1501 	recall: 0.2000 	f1: 0.1715
 25%|██▌       | 5/20 [02:50<05:56, 23/usr/lib/python3.10/multiprocessing/popen_fork.py:66: RuntimeWarning: os.fork() was called. os.fork() is incompatible with multithreaded code, and JAX is multithreaded, so this will likely lead to a deadlock.
  self.pid = os.fork()[00:00<?, ?it/s]
 10%|▉         | 8/84 [00:01<00:13,  5.47it/s]
epoch: 4 	loss: 0.029945   	accuracy: 0.7186 	precision: 0.1437 	recall: 0.2000 	f1: 0.1672






  self.pid = os.fork()[00:00<?, ?it/s]
                                      /usr/lib/python3.10/multiprocessing/popen_fork.py:66: RuntimeWarning: os.fork() was called. os.fork() is incompatible with multithreaded code, and JAX is multithreaded, so this will likely lead to a deadlock.
  self.pid = os.fork()[00:00<?, ?it/s]
 30%|███       | 6/20 [03:06<04:56, 21/usr/lib/python3.10/multiprocessing/popen_fork.py:66: RuntimeWarning: os.fork() was called. os.fork() is incompatible with multithreaded code, and JAX is multithreaded, so this will likely lead to a deadlock.
  self.pid = os.fork()[00:00<?, ?it/s]
 10%|▉         | 8/84 [00:01<00:14,  5.41it/s]
epoch: 5 	loss: 0.003334   	accuracy: 0.7506 	precision: 0.1501 	recall: 0.2000 	f1: 0.1715
epoch: 5 	loss: 0.029853   	accuracy: 0.7186 	precision: 0.1437 	recall: 0.2000 	f1: 0.1672






  self.pid = os.fork()[00:00<?, ?it/s]
                                      /usr/lib/python3.10/multiprocessing/popen_fork.py:66: RuntimeWarning: os.fork() was called. os.fork() is incompatible with multithreaded code, and JAX is multithreaded, so this will likely lead to a deadlock.
  self.pid = os.fork()[00:00<?, ?it/s]
 35%|███▌      | 7/20 [03:22<04:13, 19/usr/lib/python3.10/multiprocessing/popen_fork.py:66: RuntimeWarning: os.fork() was called. os.fork() is incompatible with multithreaded code, and JAX is multithreaded, so this will likely lead to a deadlock.
  self.pid = os.fork()[00:00<?, ?it/s]
 10%|▉         | 8/84 [00:01<00:13,  5.70it/s]
epoch: 6 	loss: 0.003313   	accuracy: 0.7506 	precision: 0.1501 	recall: 0.2000 	f1: 0.1715
epoch: 6 	loss: 0.030293   	accuracy: 0.7186 	precision: 0.1437 	recall: 0.2000 	f1: 0.1672






  self.pid = os.fork()[00:00<?, ?it/s]
                                      /usr/lib/python3.10/multiprocessing/popen_fork.py:66: RuntimeWarning: os.fork() was called. os.fork() is incompatible with multithreaded code, and JAX is multithreaded, so this will likely lead to a deadlock.
  self.pid = os.fork()[00:00<?, ?it/s]
 40%|████      | 8/20 [03:38<03:40, 18/usr/lib/python3.10/multiprocessing/popen_fork.py:66: RuntimeWarning: os.fork() was called. os.fork() is incompatible with multithreaded code, and JAX is multithreaded, so this will likely lead to a deadlock.
  self.pid = os.fork()[00:00<?, ?it/s]
 10%|▉         | 8/84 [00:01<00:13,  5.78it/s]
epoch: 7 	loss: 0.003353   	accuracy: 0.7506 	precision: 0.1501 	recall: 0.2000 	f1: 0.1715
epoch: 7 	loss: 0.030167   	accuracy: 0.7186 	precision: 0.1437 	recall: 0.2000 	f1: 0.1672






  self.pid = os.fork()[00:00<?, ?it/s]
                                      /usr/lib/python3.10/multiprocessing/popen_fork.py:66: RuntimeWarning: os.fork() was called. os.fork() is incompatible with multithreaded code, and JAX is multithreaded, so this will likely lead to a deadlock.
  self.pid = os.fork()[00:00<?, ?it/s]
  9%|▉         | 1/11 [00:00<00:03,  3.11it/s]
epoch: 8 	loss: 0.003365   	accuracy: 0.7506 	precision: 0.1501 	recall: 0.2000 	f1: 0.1715
epoch: 8 	loss: 0.030147   	accuracy: 0.7186 	precision: 0.1437 	recall: 0.2000 	f1: 0.1672
  self.pid = os.fork()[00:00<?, ?it/s]






 67%|██████▋   | 56/84 [00:02<00:00, 29.47it/s]
epoch: 9 	loss: 0.003390   	accuracy: 0.7506 	precision: 0.1501 	recall: 0.2000 	f1: 0.1715
epoch: 9 	loss: 0.030195   	accuracy: 0.7186 	precision: 0.1437 	recall: 0.2000 	f1: 0.1672
  self.pid = os.fork()[00:00<?, ?it/s]
                                      /usr/lib/python3.10/multiprocessing/popen_fork.py:66: RuntimeWarning: os.fork() was called. os.fork() is incompatible with multithreaded code, and JAX is multithreaded, so this will likely lead to a deadlock.
  self.pid = os.fork()[00:00<?, ?it/s]
  self.pid = os.fork()[00:00<?, ?it/s]






 67%|██████▋   | 56/84 [00:02<00:00, 29.81it/s]
epoch: 10 	loss: 0.003391   	accuracy: 0.7506 	precision: 0.1501 	recall: 0.2000 	f1: 0.1715
epoch: 10 	loss: 0.030336   	accuracy: 0.7186 	precision: 0.1437 	recall: 0.2000 	f1: 0.1672
  self.pid = os.fork()[00:00<?, ?it/s]
                                      /usr/lib/python3.10/multiprocessing/popen_fork.py:66: RuntimeWarning: os.fork() was called. os.fork() is incompatible with multithreaded code, and JAX is multithreaded, so this will likely lead to a deadlock.
  self.pid = os.fork()[00:00<?, ?it/s]
  self.pid = os.fork()[00:00<?, ?it/s]






 71%|███████▏  | 60/84 [00:02<00:00, 31.27it/s]
  self.pid = os.fork()[00:00<?, ?it/s]
                                      /usr/lib/python3.10/multiprocessing/popen_fork.py:66: RuntimeWarning: os.fork() was called. os.fork() is incompatible with multithreaded code, and JAX is multithreaded, so this will likely lead to a deadlock.
  self.pid = os.fork()[00:00<?, ?it/s]
 45%|████▌     | 5/11 [00:00<00:00, 14.64it/s]
epoch: 11 	loss: 0.030413   	accuracy: 0.7186 	precision: 0.1437 	recall: 0.2000 	f1: 0.1672
  self.pid = os.fork()[00:00<?, ?it/s]






 71%|███████▏  | 60/84 [00:02<00:00, 31.23it/s]
  self.pid = os.fork()[00:00<?, ?it/s]
                                      /usr/lib/python3.10/multiprocessing/popen_fork.py:66: RuntimeWarning: os.fork() was called. os.fork() is incompatible with multithreaded code, and JAX is multithreaded, so this will likely lead to a deadlock.
  self.pid = os.fork()[00:00<?, ?it/s]
 82%|████████▏ | 9/11 [00:00<00:00, 20.79it/s]
epoch: 12 	loss: 0.030480   	accuracy: 0.7186 	precision: 0.1437 	recall: 0.2000 	f1: 0.1672
  self.pid = os.fork()[00:00<?, ?it/s]






  self.pid = os.fork()[00:00<?, ?it/s]
                                      /usr/lib/python3.10/multiprocessing/popen_fork.py:66: RuntimeWarning: os.fork() was called. os.fork() is incompatible with multithreaded code, and JAX is multithreaded, so this will likely lead to a deadlock.
  self.pid = os.fork()[00:00<?, ?it/s]
 45%|████▌     | 5/11 [00:00<00:00, 13.67it/s]
epoch: 13 	loss: 0.003403   	accuracy: 0.7506 	precision: 0.1501 	recall: 0.2000 	f1: 0.1715
epoch: 13 	loss: 0.030559   	accuracy: 0.7186 	precision: 0.1437 	recall: 0.2000 	f1: 0.1672
  self.pid = os.fork()[00:00<?, ?it/s]






  self.pid = os.fork()[00:00<?, ?it/s]
                                      /usr/lib/python3.10/multiprocessing/popen_fork.py:66: RuntimeWarning: os.fork() was called. os.fork() is incompatible with multithreaded code, and JAX is multithreaded, so this will likely lead to a deadlock.
  self.pid = os.fork()[00:00<?, ?it/s]
 45%|████▌     | 5/11 [00:00<00:00, 14.10it/s]
epoch: 14 	loss: 0.003412   	accuracy: 0.7506 	precision: 0.1501 	recall: 0.2000 	f1: 0.1715
epoch: 14 	loss: 0.030603   	accuracy: 0.7186 	precision: 0.1437 	recall: 0.2000 	f1: 0.1672
  self.pid = os.fork()[00:00<?, ?it/s]
 29%|██▊       | 24/84 [00:03<00:07,  7.77it/s]
 46%|████▋     | 39/84 [00:05<00:05,  7.88it/s]
 63%|██████▎   | 53/84 [00:07<00:03,  7.93it/s]
 82%|████████▏ | 69/84 [00:09<00:01,  8.02it/s]
  0%|          | 0/84 [00:00<?, ?it/s]
 67%|██████▋   | 56/84 [00:02<00:00, 29.93it/s]
 45%|████▌     | 5/11 [00:00<00:00, 14.24it/s]
 45%|████▌     | 5/11 [00:00<00:00, 14.24it/s]
epoch: 15 	loss: 0.003423   	accuracy: 0.7506 	precision: 0.1501 	recall: 0.2000 	f1: 0.1715
epoch: 15 	loss: 0.030580   	accuracy: 0.7186 	precision: 0.1437 	recall: 0.2000 	f1: 0.1672
 11%|█         | 9/84 [00:01<00:12,  5.95it/s]
 27%|██▋       | 23/84 [00:03<00:08,  7.25it/s]
 46%|████▋     | 39/84 [00:05<00:05,  7.71it/s]
 63%|██████▎   | 53/84 [00:07<00:04,  7.61it/s]
 82%|████████▏ | 69/84 [00:09<00:01,  7.97it/s]
  0%|          | 0/84 [00:00<?, ?it/s]
 62%|██████▏   | 52/84 [00:02<00:01, 30.57it/s]
  9%|▉         | 1/11 [00:00<00:03,  3.30it/s]
  9%|▉         | 1/11 [00:00<00:03,  3.30it/s]
epoch: 16 	loss: 0.003435   	accuracy: 0.7506 	precision: 0.1501 	recall: 0.2000 	f1: 0.1715
epoch: 16 	loss: 0.030601   	accuracy: 0.7186 	precision: 0.1437 	recall: 0.2000 	f1: 0.1672
 11%|█         | 9/84 [00:01<00:12,  5.94it/s]
 27%|██▋       | 23/84 [00:03<00:08,  7.20it/s]
 46%|████▋     | 39/84 [00:05<00:05,  7.92it/s]
 63%|██████▎   | 53/84 [00:07<00:03,  7.77it/s]
 82%|████████▏ | 69/84 [00:09<00:01,  7.88it/s]
  0%|          | 0/84 [00:00<?, ?it/s]
 64%|██████▍   | 54/84 [00:02<00:00, 30.02it/s]
  9%|▉         | 1/11 [00:00<00:02,  3.39it/s]
  9%|▉         | 1/11 [00:00<00:02,  3.39it/s]
epoch: 17 	loss: 0.003472   	accuracy: 0.7506 	precision: 0.1501 	recall: 0.2000 	f1: 0.1715
epoch: 17 	loss: 0.030428   	accuracy: 0.7186 	precision: 0.1437 	recall: 0.2000 	f1: 0.1672
 11%|█         | 9/84 [00:01<00:12,  5.93it/s]
 27%|██▋       | 23/84 [00:03<00:08,  7.16it/s]
 46%|████▋     | 39/84 [00:05<00:05,  7.81it/s]
 63%|██████▎   | 53/84 [00:07<00:04,  7.59it/s]
 81%|████████  | 68/84 [00:09<00:01,  8.42it/s]
  0%|          | 0/84 [00:00<?, ?it/s]
 62%|██████▏   | 52/84 [00:02<00:01, 30.76it/s]
  9%|▉         | 1/11 [00:00<00:03,  3.27it/s]
  9%|▉         | 1/11 [00:00<00:03,  3.27it/s]
epoch: 18 	loss: 0.003498   	accuracy: 0.7506 	precision: 0.1501 	recall: 0.2000 	f1: 0.1715
epoch: 18 	loss: 0.030342   	accuracy: 0.7186 	precision: 0.1437 	recall: 0.2000 	f1: 0.1672
 11%|█         | 9/84 [00:01<00:12,  6.01it/s]
 27%|██▋       | 23/84 [00:03<00:08,  7.18it/s]
 46%|████▋     | 39/84 [00:05<00:05,  7.79it/s]
 63%|██████▎   | 53/84 [00:07<00:03,  7.91it/s]
 82%|████████▏ | 69/84 [00:09<00:01,  7.97it/s]
  0%|          | 0/84 [00:00<?, ?it/s]
 45%|████▌     | 38/84 [00:01<00:01, 30.82it/s]
 45%|████▌     | 5/11 [00:00<00:00, 14.18it/s]
 45%|████▌     | 5/11 [00:00<00:00, 14.18it/s]
epoch: 19 	loss: 0.003525   	accuracy: 0.7506 	precision: 0.1501 	recall: 0.2000 	f1: 0.1715
epoch: 19 	loss: 0.030263   	accuracy: 0.7186 	precision: 0.1437 	recall: 0.2000 	f1: 0.1672
  9%|▉         | 1/11 [00:00<00:03,  3.31it/s]/python3.10/multiprocessing/popen_fork.py:66: RuntimeWarning: os.fork() was called. os.fork() is incompatible with multithreaded code, and JAX is multithreaded, so this will likely lead to a deadlock.
  9%|▉         | 1/11 [00:00<00:03,  3.31it/s]/python3.10/multiprocessing/popen_fork.py:66: RuntimeWarning: os.fork() was called. os.fork() is incompatible with multithreaded code, and JAX is multithreaded, so this will likely lead to a deadlock.
OptimizedModule(
  (_orig_mod): BertForSequenceClassification(
    (bert): BertModel(
      (embeddings): BertEmbeddings(
        (word_embeddings): Embedding(32784, 768)
        (position_embeddings): Embedding(512, 768)
        (token_type_embeddings): Embedding(2, 768)
        (LayerNorm): LayerNorm((768,), eps=1e-12, elementwise_affine=True)
        (dropout): Dropout(p=0.1, inplace=False)
      )
      (encoder): BertEncoder(
        (layer): ModuleList(
          (0-11): 12 x BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1, inplace=False)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm((768,), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1, inplace=False)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
              (intermediate_act_fn): GELUActivation()
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm((768,), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
          )
        )
      )
      (pooler): BertPooler(
        (dense): Linear(in_features=768, out_features=768, bias=True)
        (activation): Tanh()
      )
    )
    (dropout): Dropout(p=0.1, inplace=False)
    (classifier): Linear(in_features=768, out_features=5, bias=True)
  )
)
<class 'torch._dynamo.eval_frame.OptimizedModule'>
                                               python3.10/multiprocessing/popen_fork.py:66: RuntimeWarning: os.fork() was called. os.fork() is incompatible with multithreaded code, and JAX is multithreaded, so this will likely lead to a deadlock.
                                               python3.10/multiprocessing/popen_fork.py:66: RuntimeWarning: os.fork() was called. os.fork() is incompatible with multithreaded code, and JAX is multithreaded, so this will likely lead to a deadlock.