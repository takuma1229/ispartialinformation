
/content/drive/MyDrive/research_discourse_relation/discourse_relation_explainability
/usr/local/lib/python3.10/dist-packages/huggingface_hub/utils/_token.py:88: UserWarning:
The secret `HF_TOKEN` does not exist in your Colab secrets.
To authenticate with the Hugging Face Hub, create a token in your settings tab (https://huggingface.co/settings/tokens), set it as secret in your Google Colab and restart your session.
You will be able to reuse this secret in all of your notebooks.
Please note that authentication is recommended but still optional to access public models or datasets.
  warnings.warn(
num_added_tokens: 16, added_special_tokens: <NOUN>,<PRONOUN>,<ADJECTIVAL-NOUN>,<PRENOUN-ADJECTIVAL>,<ADVERB>,<CONJUNCTION>,<INTERJECTION>,<VERB>,<ADJECTIVE>,<AUXILIARY-VERB>,<PARTICLE>,<PREFIX>,<SUFFIX>,<SYMBOL>,<AUXILIARY-SYMBOL>,<BLANK>
Some weights of BertForSequenceClassification were not initialized from the model checkpoint at cl-tohoku/bert-base-japanese-v3 and are newly initialized: ['classifier.bias', 'classifier.weight']
You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.
/usr/lib/python3.10/multiprocessing/popen_fork.py:66: RuntimeWarning: os.fork() was called. os.fork() is incompatible with multithreaded code, and JAX is multithreaded, so this will likely lead to a deadlock.
  self.pid = os.fork()



 64%|██████▎   | 7/11 [01:20<00:24,  6.19s/it]
  0%|          | 0/15 [00:00<?, ?it/s]/usr/lib/python3.10/multiprocessing/popen_fork.py:66: RuntimeWarning: os.fork() was called. os.fork() is incompatible with multithreaded code, and JAX is multithreaded, so this will likely lead to a deadlock.
  self.pid = os.fork()[00:00<?, ?it/s]




  self.pid = os.fork()[00:00<?, ?it/s]

 92%|█████████▏| 77/84 [00:02<00:00, 35.24it/s]
epoch: 0 	loss: 0.001795   	accuracy: 0.7865 	precision: 0.2677 	recall: 0.3051 	f1: 0.2843
  self.pid = os.fork()[00:00<?, ?it/s]
  7%|▋         | 1/15 [01:40<23:20, 10/usr/lib/python3.10/multiprocessing/popen_fork.py:66: RuntimeWarning: os.fork() was called. os.fork() is incompatible with multithreaded code, and JAX is multithreaded, so this will likely lead to a deadlock.
  self.pid = os.fork()[00:00<?, ?it/s]






 82%|████████▏ | 69/84 [00:02<00:00, 33.77it/s]
epoch: 1 	loss: 0.001509   	accuracy: 0.8330 	precision: 0.4085 	recall: 0.4282 	f1: 0.4129
  self.pid = os.fork()[00:00<?, ?it/s]
 13%|█▎        | 2/15 [01:54<10:43, 49/usr/lib/python3.10/multiprocessing/popen_fork.py:66: RuntimeWarning: os.fork() was called. os.fork() is incompatible with multithreaded code, and JAX is multithreaded, so this will likely lead to a deadlock.
  self.pid = os.fork()[00:00<?, ?it/s]






 76%|███████▌  | 64/84 [00:02<00:00, 31.72it/s]
epoch: 2 	loss: 0.000665   	accuracy: 0.8876 	precision: 0.4629 	recall: 0.5111 	f1: 0.4690
  self.pid = os.fork()[00:00<?, ?it/s]
 20%|██        | 3/15 [02:08<06:40, 33/usr/lib/python3.10/multiprocessing/popen_fork.py:66: RuntimeWarning: os.fork() was called. os.fork() is incompatible with multithreaded code, and JAX is multithreaded, so this will likely lead to a deadlock.
  self.pid = os.fork()[00:00<?, ?it/s]






 62%|██████▏   | 52/84 [00:01<00:01, 31.94it/s]
epoch: 3 	loss: 0.000187   	accuracy: 0.9161 	precision: 0.6832 	recall: 0.5620 	f1: 0.5166
  self.pid = os.fork()[00:00<?, ?it/s]
 27%|██▋       | 4/15 [02:22<04:44, 25/usr/lib/python3.10/multiprocessing/popen_fork.py:66: RuntimeWarning: os.fork() was called. os.fork() is incompatible with multithreaded code, and JAX is multithreaded, so this will likely lead to a deadlock.
  self.pid = os.fork()[00:00<?, ?it/s]





  self.pid = os.fork()[00:00<?, ?it/s]
 82%|████████▏ | 9/11 [00:00<00:00, 23.11it/s]
epoch: 4 	loss: 0.000078   	accuracy: 0.9476 	precision: 0.7228 	recall: 0.6871 	f1: 0.7008
  self.pid = os.fork()[00:00<?, ?it/s]






  self.pid = os.fork()[00:00<?, ?it/s]
epoch: 5 	loss: 0.000050   	accuracy: 0.9588 	precision: 0.7363 	recall: 0.7384 	f1: 0.7367
epoch: 5 	loss: 0.035512   	accuracy: 0.8862 	precision: 0.6080 	recall: 0.6454 	f1: 0.6188
 40%|████      | 6/15 [02:51<02:53, 19/usr/lib/python3.10/multiprocessing/popen_fork.py:66: RuntimeWarning: os.fork() was called. os.fork() is incompatible with multithreaded code, and JAX is multithreaded, so this will likely lead to a deadlock.
  self.pid = os.fork()[00:00<?, ?it/s]






 87%|████████▋ | 73/84 [00:02<00:00, 34.55it/s]
epoch: 6 	loss: 0.000038   	accuracy: 0.9738 	precision: 0.7494 	recall: 0.7620 	f1: 0.7527
  self.pid = os.fork()[00:00<?, ?it/s]
 47%|████▋     | 7/15 [03:06<02:21, 17/usr/lib/python3.10/multiprocessing/popen_fork.py:66: RuntimeWarning: os.fork() was called. os.fork() is incompatible with multithreaded code, and JAX is multithreaded, so this will likely lead to a deadlock.
  self.pid = os.fork()[00:00<?, ?it/s]






 76%|███████▌  | 64/84 [00:02<00:00, 31.44it/s]
epoch: 7 	loss: 0.000030   	accuracy: 0.9873 	precision: 0.9781 	recall: 0.9367 	f1: 0.9538
  self.pid = os.fork()[00:00<?, ?it/s]
 53%|█████▎    | 8/15 [03:20<01:55, 16/usr/lib/python3.10/multiprocessing/popen_fork.py:66: RuntimeWarning: os.fork() was called. os.fork() is incompatible with multithreaded code, and JAX is multithreaded, so this will likely lead to a deadlock.
  self.pid = os.fork()[00:00<?, ?it/s]






 71%|███████▏  | 60/84 [00:02<00:00, 32.43it/s]
epoch: 8 	loss: 0.000031   	accuracy: 0.9858 	precision: 0.9609 	recall: 0.8328 	f1: 0.8507
  self.pid = os.fork()[00:00<?, ?it/s]
 60%|██████    | 9/15 [03:34<01:35, 15/usr/lib/python3.10/multiprocessing/popen_fork.py:66: RuntimeWarning: os.fork() was called. os.fork() is incompatible with multithreaded code, and JAX is multithreaded, so this will likely lead to a deadlock.
  self.pid = os.fork()[00:00<?, ?it/s]






 57%|█████▋    | 48/84 [00:01<00:01, 29.70it/s]
epoch: 9 	loss: 0.000015   	accuracy: 0.9873 	precision: 0.8973 	recall: 0.9243 	f1: 0.8980
  self.pid = os.fork()[00:00<?, ?it/s]
 67%|██████▋   | 10/15 [03:49<01:17, 1/usr/lib/python3.10/multiprocessing/popen_fork.py:66: RuntimeWarning: os.fork() was called. os.fork() is incompatible with multithreaded code, and JAX is multithreaded, so this will likely lead to a deadlock.
  self.pid = os.fork()[00:00<?, ?it/s]





  self.pid = os.fork()[00:00<?, ?it/s]
 45%|████▌     | 5/11 [00:00<00:00, 17.59it/s]
epoch: 10 	loss: 0.000013   	accuracy: 0.9910 	precision: 0.9878 	recall: 0.9076 	f1: 0.9390
  self.pid = os.fork()[00:00<?, ?it/s]






  self.pid = os.fork()[00:00<?, ?it/s]
epoch: 11 	loss: 0.000012   	accuracy: 0.9940 	precision: 0.9970 	recall: 0.9602 	f1: 0.9776
epoch: 11 	loss: 0.056803   	accuracy: 0.8623 	precision: 0.6174 	recall: 0.6854 	f1: 0.6255
 80%|████████  | 12/15 [04:17<00:44, 1/usr/lib/python3.10/multiprocessing/popen_fork.py:66: RuntimeWarning: os.fork() was called. os.fork() is incompatible with multithreaded code, and JAX is multithreaded, so this will likely lead to a deadlock.
  self.pid = os.fork()[00:00<?, ?it/s]






  self.pid = os.fork()[00:00<?, ?it/s]
epoch: 12 	loss: 0.000011   	accuracy: 0.9940 	precision: 0.9931 	recall: 0.9640 	f1: 0.9777
epoch: 12 	loss: 0.060102   	accuracy: 0.8623 	precision: 0.6301 	recall: 0.6529 	f1: 0.5997
 87%|████████▋ | 13/15 [04:31<00:29, 1/usr/lib/python3.10/multiprocessing/popen_fork.py:66: RuntimeWarning: os.fork() was called. os.fork() is incompatible with multithreaded code, and JAX is multithreaded, so this will likely lead to a deadlock.
  self.pid = os.fork()[00:00<?, ?it/s]






 95%|█████████▌| 80/84 [00:02<00:00, 35.90it/s]
epoch: 13 	loss: 0.000011   	accuracy: 0.9940 	precision: 0.9931 	recall: 0.9640 	f1: 0.9777
  self.pid = os.fork()[00:00<?, ?it/s]
 93%|█████████▎| 14/15 [04:46<00:14, 1/usr/lib/python3.10/multiprocessing/popen_fork.py:66: RuntimeWarning: os.fork() was called. os.fork() is incompatible with multithreaded code, and JAX is multithreaded, so this will likely lead to a deadlock.
  self.pid = os.fork()[00:00<?, ?it/s]






 90%|█████████ | 76/84 [00:02<00:00, 34.91it/s]
epoch: 14 	loss: 0.000010   	accuracy: 0.9940 	precision: 0.9924 	recall: 0.9647 	f1: 0.9777
  self.pid = os.fork()[00:00<?, ?it/s]
100%|██████████| 15/15 [05:00<00:00, 20.02s/it]
  0%|          | 0/11 [00:00<?, ?it/s]/usr/lib/python3.10/multiprocessing/popen_fork.py:66: RuntimeWarning: os.fork() was called. os.fork() is incompatible with multithreaded code, and JAX is multithreaded, so this will likely lead to a deadlock.
  self.pid = os.fork()
  0%|          | 0/11 [00:00<?, ?it/s]/usr/lib/python3.10/multiprocessing/popen_fork.py:66: RuntimeWarning: os.fork() was called. os.fork() is incompatible with multithreaded code, and JAX is multithreaded, so this will likely lead to a deadlock.
  self.pid = os.fork()

 91%|█████████ | 10/11 [00:00<00:00, 28.50it/s]
OptimizedModule(
  (_orig_mod): BertForSequenceClassification(
    (bert): BertModel(
      (embeddings): BertEmbeddings(
        (word_embeddings): Embedding(32784, 768)
        (position_embeddings): Embedding(512, 768)
        (token_type_embeddings): Embedding(2, 768)
        (LayerNorm): LayerNorm((768,), eps=1e-12, elementwise_affine=True)
        (dropout): Dropout(p=0.1, inplace=False)
      )
      (encoder): BertEncoder(
        (layer): ModuleList(
          (0-11): 12 x BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1, inplace=False)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm((768,), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1, inplace=False)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
              (intermediate_act_fn): GELUActivation()
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm((768,), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
          )
        )
      )
      (pooler): BertPooler(
        (dense): Linear(in_features=768, out_features=768, bias=True)
        (activation): Tanh()
      )
    )
    (dropout): Dropout(p=0.1, inplace=False)
    (classifier): Linear(in_features=768, out_features=5, bias=True)
  )
)
<class 'torch._dynamo.eval_frame.OptimizedModule'>
<class 'transformers.models.bert.modeling_bert.BertForSequenceClassification'>
No traceback available to show.