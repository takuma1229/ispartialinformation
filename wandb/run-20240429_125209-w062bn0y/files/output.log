/content/drive/MyDrive/research_discourse_relation/discourse_relation_explainability
==============label num=============
5
num_added_tokens: 16, added_special_tokens: <NOUN>,<PRONOUN>,<ADJECTIVAL-NOUN>,<PRENOUN-ADJECTIVAL>,<ADVERB>,<CONJUNCTION>,<INTERJECTION>,<VERB>,<ADJECTIVE>,<AUXILIARY-VERB>,<PARTICLE>,<PREFIX>,<SUFFIX>,<SYMBOL>,<AUXILIARY-SYMBOL>,<BLANK>
Some weights of BertForSequenceClassification were not initialized from the model checkpoint at cl-tohoku/bert-base-japanese-v3 and are newly initialized: ['classifier.bias', 'classifier.weight']
You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.
  0%|          | 0/11 [00:00<?, ?it/s]/usr/lib/python3.10/multiprocessing/popen_fork.py:66: RuntimeWarning: os.fork() was called. os.fork() is incompatible with multithreaded code, and JAX is multithreaded, so this will likely lead to a deadlock.
  self.pid = os.fork()
  0%|          | 0/11 [00:00<?, ?it/s]/usr/lib/python3.10/multiprocessing/popen_fork.py:66: RuntimeWarning: os.fork() was called. os.fork() is incompatible with multithreaded code, and JAX is multithreaded, so this will likely lead to a deadlock.
  self.pid = os.fork()
  0%|          | 0/15 [00:00<?, ?it/s]/usr/lib/python3.10/multiprocessing/popen_fork.py:66: RuntimeWarning: os.fork() was called. os.fork() is incompatible with multithreaded code, and JAX is multithreaded, so this will likely lead to a deadlock.
  self.pid = os.fork()[00:00<?, ?it/s]
epoch: None 	loss: 0.071788   	accuracy: 0.1916 	precision: 0.0386 	recall: 0.2000 	f1: 0.0646
epoch: None 	loss: 0.077880   	accuracy: 0.2381 	precision: 0.0479 	recall: 0.1951 	f1: 0.0769




  self.pid = os.fork()[00:00<?, ?it/s]
 82%|████████▏ | 9/11 [00:00<00:00, 23.13it/s]
epoch: 0 	loss: 0.026617   	accuracy: 0.7186 	precision: 0.1437 	recall: 0.2000 	f1: 0.1672
  self.pid = os.fork()[00:00<?, ?it/s]
  7%|▋         | 1/15 [01:31<21:17, 91/usr/lib/python3.10/multiprocessing/popen_fork.py:66: RuntimeWarning: os.fork() was called. os.fork() is incompatible with multithreaded code, and JAX is multithreaded, so this will likely lead to a deadlock.
  self.pid = os.fork()[00:00<?, ?it/s]





 82%|████████▏ | 9/11 [00:00<00:00, 24.45it/s]
epoch: 1 	loss: 0.028556   	accuracy: 0.7186 	precision: 0.1437 	recall: 0.2000 	f1: 0.1672
  self.pid = os.fork()[00:00<?, ?it/s]
 13%|█▎        | 2/15 [01:43<09:38, 44/usr/lib/python3.10/multiprocessing/popen_fork.py:66: RuntimeWarning: os.fork() was called. os.fork() is incompatible with multithreaded code, and JAX is multithreaded, so this will likely lead to a deadlock.
  self.pid = os.fork()[00:00<?, ?it/s]




  self.pid = os.fork()[00:00<?, ?it/s]
  9%|▉         | 1/11 [00:00<00:02,  4.15it/s]
epoch: 2 	loss: 0.028975   	accuracy: 0.7186 	precision: 0.1437 	recall: 0.2000 	f1: 0.1672
  self.pid = os.fork()[00:00<?, ?it/s]




 94%|█████████▍| 79/84 [00:09<00:00,  9.33it/s]
epoch: 3 	loss: 0.030007   	accuracy: 0.7186 	precision: 0.1437 	recall: 0.2000 	f1: 0.1672
  self.pid = os.fork()[00:00<?, ?it/s]
 27%|██▋       | 4/15 [02:06<04:05, 22/usr/lib/python3.10/multiprocessing/popen_fork.py:66: RuntimeWarning: os.fork() was called. os.fork() is incompatible with multithreaded code, and JAX is multithreaded, so this will likely lead to a deadlock.
  self.pid = os.fork()[00:00<?, ?it/s]





  9%|▉         | 1/11 [00:00<00:02,  4.24it/s]
epoch: 4 	loss: 0.030046   	accuracy: 0.7186 	precision: 0.1437 	recall: 0.2000 	f1: 0.1672
  self.pid = os.fork()[00:00<?, ?it/s]
 33%|███▎      | 5/15 [02:17<03:03, 18/usr/lib/python3.10/multiprocessing/popen_fork.py:66: RuntimeWarning: os.fork() was called. os.fork() is incompatible with multithreaded code, and JAX is multithreaded, so this will likely lead to a deadlock.
  self.pid = os.fork()[00:00<?, ?it/s]




  self.pid = os.fork()[00:00<?, ?it/s]
 55%|█████▍    | 6/11 [00:00<00:00, 20.48it/s]
epoch: 5 	loss: 0.030023   	accuracy: 0.7186 	precision: 0.1437 	recall: 0.2000 	f1: 0.1672
  self.pid = os.fork()[00:00<?, ?it/s]




 94%|█████████▍| 79/84 [00:09<00:00,  9.30it/s]
epoch: 6 	loss: 0.029927   	accuracy: 0.7186 	precision: 0.1437 	recall: 0.2000 	f1: 0.1672
  self.pid = os.fork()[00:00<?, ?it/s]
 47%|████▋     | 7/15 [02:40<01:55, 14/usr/lib/python3.10/multiprocessing/popen_fork.py:66: RuntimeWarning: os.fork() was called. os.fork() is incompatible with multithreaded code, and JAX is multithreaded, so this will likely lead to a deadlock.
  self.pid = os.fork()[00:00<?, ?it/s]





  0%|          | 0/11 [00:00<?, ?it/s]
epoch: 7 	loss: 0.030017   	accuracy: 0.7186 	precision: 0.1437 	recall: 0.2000 	f1: 0.1672
  self.pid = os.fork()[00:00<?, ?it/s]
 53%|█████▎    | 8/15 [02:51<01:34, 13/usr/lib/python3.10/multiprocessing/popen_fork.py:66: RuntimeWarning: os.fork() was called. os.fork() is incompatible with multithreaded code, and JAX is multithreaded, so this will likely lead to a deadlock.
  self.pid = os.fork()[00:00<?, ?it/s]





  self.pid = os.fork()[00:00<?, ?it/s]
epoch: 8 	loss: 0.030240   	accuracy: 0.7186 	precision: 0.1437 	recall: 0.2000 	f1: 0.1672
epoch: 8 	loss: 0.041249   	accuracy: 0.6607 	precision: 0.1321 	recall: 0.2000 	f1: 0.1591
 60%|██████    | 9/15 [03:03<01:17, 12/usr/lib/python3.10/multiprocessing/popen_fork.py:66: RuntimeWarning: os.fork() was called. os.fork() is incompatible with multithreaded code, and JAX is multithreaded, so this will likely lead to a deadlock.
  self.pid = os.fork()[00:00<?, ?it/s]




  self.pid = os.fork()[00:00<?, ?it/s]
 67%|██████▋   | 10/15 [03:14<01:02, 1/usr/lib/python3.10/multiprocessing/popen_fork.py:66: RuntimeWarning: os.fork() was called. os.fork() is incompatible with multithreaded code, and JAX is multithreaded, so this will likely lead to a deadlock.
  self.pid = os.fork()[00:00<?, ?it/s]
epoch: 9 	loss: 0.030349   	accuracy: 0.7186 	precision: 0.1437 	recall: 0.2000 	f1: 0.1672
epoch: 9 	loss: 0.041454   	accuracy: 0.6607 	precision: 0.1321 	recall: 0.2000 	f1: 0.1591




  self.pid = os.fork()[00:00<?, ?it/s]
 73%|███████▎  | 11/15 [03:26<00:48, 1/usr/lib/python3.10/multiprocessing/popen_fork.py:66: RuntimeWarning: os.fork() was called. os.fork() is incompatible with multithreaded code, and JAX is multithreaded, so this will likely lead to a deadlock.
  self.pid = os.fork()[00:00<?, ?it/s]
  1%|          | 1/84 [00:00<00:28,  2.88it/s]
epoch: 10 	loss: 0.030681   	accuracy: 0.7186 	precision: 0.1437 	recall: 0.2000 	f1: 0.1672





  9%|▉         | 1/11 [00:00<00:02,  4.02it/s]
epoch: 11 	loss: 0.030273   	accuracy: 0.7186 	precision: 0.1437 	recall: 0.2000 	f1: 0.1672
  self.pid = os.fork()[00:00<?, ?it/s]
 80%|████████  | 12/15 [03:37<00:35, 1/usr/lib/python3.10/multiprocessing/popen_fork.py:66: RuntimeWarning: os.fork() was called. os.fork() is incompatible with multithreaded code, and JAX is multithreaded, so this will likely lead to a deadlock.
  self.pid = os.fork()[00:00<?, ?it/s]




  self.pid = os.fork()[00:00<?, ?it/s]
  9%|▉         | 1/11 [00:00<00:02,  4.04it/s]
epoch: 12 	loss: 0.029820   	accuracy: 0.7186 	precision: 0.1437 	recall: 0.2000 	f1: 0.1672
  self.pid = os.fork()[00:00<?, ?it/s]




  self.pid = os.fork()[00:00<?, ?it/s]
 93%|█████████▎| 14/15 [04:00<00:11, 1/usr/lib/python3.10/multiprocessing/popen_fork.py:66: RuntimeWarning: os.fork() was called. os.fork() is incompatible with multithreaded code, and JAX is multithreaded, so this will likely lead to a deadlock.
  self.pid = os.fork()[00:00<?, ?it/s]
epoch: 13 	loss: 0.030286   	accuracy: 0.7186 	precision: 0.1437 	recall: 0.2000 	f1: 0.1672
epoch: 13 	loss: 0.041522   	accuracy: 0.6607 	precision: 0.1321 	recall: 0.2000 	f1: 0.1591




 77%|███████▋  | 65/84 [00:08<00:02,  9.05it/s]
                                      /usr/lib/python3.10/multiprocessing/popen_fork.py:66: RuntimeWarning: os.fork() was called. os.fork() is incompatible with multithreaded code, and JAX is multithreaded, so this will likely lead to a deadlock.
  self.pid = os.fork()[00:00<?, ?it/s]
100%|██████████| 15/15 [04:11<00:00, 16.79s/it]
  0%|          | 0/11 [00:00<?, ?it/s]/usr/lib/python3.10/multiprocessing/popen_fork.py:66: RuntimeWarning: os.fork() was called. os.fork() is incompatible with multithreaded code, and JAX is multithreaded, so this will likely lead to a deadlock.
  self.pid = os.fork()
  0%|          | 0/11 [00:00<?, ?it/s]/usr/lib/python3.10/multiprocessing/popen_fork.py:66: RuntimeWarning: os.fork() was called. os.fork() is incompatible with multithreaded code, and JAX is multithreaded, so this will likely lead to a deadlock.
  self.pid = os.fork()
epoch: 14 	loss: 0.030446   	accuracy: 0.7186 	precision: 0.1437 	recall: 0.2000 	f1: 0.1672
epoch: 14 	loss: 0.041427   	accuracy: 0.6607 	precision: 0.1321 	recall: 0.2000 	f1: 0.1591
OptimizedModule(
  (_orig_mod): BertForSequenceClassification(
    (bert): BertModel(
      (embeddings): BertEmbeddings(
        (word_embeddings): Embedding(32784, 768)
        (position_embeddings): Embedding(512, 768)
        (token_type_embeddings): Embedding(2, 768)
        (LayerNorm): LayerNorm((768,), eps=1e-12, elementwise_affine=True)
        (dropout): Dropout(p=0.1, inplace=False)
      )
      (encoder): BertEncoder(
        (layer): ModuleList(
          (0-11): 12 x BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1, inplace=False)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm((768,), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1, inplace=False)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
              (intermediate_act_fn): GELUActivation()
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm((768,), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
          )
        )
      )
      (pooler): BertPooler(
        (dense): Linear(in_features=768, out_features=768, bias=True)
        (activation): Tanh()
      )
    )
    (dropout): Dropout(p=0.1, inplace=False)
    (classifier): Linear(in_features=768, out_features=5, bias=True)
  )
)
<class 'torch._dynamo.eval_frame.OptimizedModule'>
<class 'transformers.models.bert.modeling_bert.BertForSequenceClassification'>