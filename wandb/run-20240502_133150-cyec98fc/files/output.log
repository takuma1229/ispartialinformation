
/content/drive/MyDrive/research_discourse_relation/discourse_relation_explainability
num_added_tokens: 16, added_special_tokens: <NOUN>,<PRONOUN>,<ADJECTIVAL-NOUN>,<PRENOUN-ADJECTIVAL>,<ADVERB>,<CONJUNCTION>,<INTERJECTION>,<VERB>,<ADJECTIVE>,<AUXILIARY-VERB>,<PARTICLE>,<PREFIX>,<SUFFIX>,<SYMBOL>,<AUXILIARY-SYMBOL>,<BLANK>
/usr/local/lib/python3.10/dist-packages/huggingface_hub/utils/_token.py:88: UserWarning:
The secret `HF_TOKEN` does not exist in your Colab secrets.
To authenticate with the Hugging Face Hub, create a token in your settings tab (https://huggingface.co/settings/tokens), set it as secret in your Google Colab and restart your session.
You will be able to reuse this secret in all of your notebooks.
Please note that authentication is recommended but still optional to access public models or datasets.
  warnings.warn(
Some weights of BertForSequenceClassification were not initialized from the model checkpoint at cl-tohoku/bert-base-japanese-v3 and are newly initialized: ['classifier.bias', 'classifier.weight']
You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.
/usr/lib/python3.10/multiprocessing/popen_fork.py:66: RuntimeWarning: os.fork() was called. os.fork() is incompatible with multithreaded code, and JAX is multithreaded, so this will likely lead to a deadlock.
  self.pid = os.fork()



 82%|████████▏ | 9/11 [01:10<00:06,  3.47s/it]
epoch: None 	loss: 0.065450   	accuracy: 0.1737 	precision: 0.2217 	recall: 0.2554 	f1: 0.1006
  0%|          | 0/11 [00:00<?, ?it/s]/usr/lib/python3.10/multiprocessing/popen_fork.py:66: RuntimeWarning: os.fork() was called. os.fork() is incompatible with multithreaded code, and JAX is multithreaded, so this will likely lead to a deadlock.
  self.pid = os.fork()
  0%|          | 0/20 [00:00<?, ?it/s]/usr/lib/python3.10/multiprocessing/popen_fork.py:66: RuntimeWarning: os.fork() was called. os.fork() is incompatible with multithreaded code, and JAX is multithreaded, so this will likely lead to a deadlock.
  self.pid = os.fork()[00:00<?, ?it/s]




  self.pid = os.fork()[00:00<?, ?it/s]

 73%|███████▎  | 61/84 [00:02<00:00, 29.66it/s]
epoch: 0 	loss: 0.001841   	accuracy: 0.7948 	precision: 0.2715 	recall: 0.3072 	f1: 0.2877
epoch: 0 	loss: 0.028199   	accuracy: 0.7904 	precision: 0.2847 	recall: 0.3208 	f1: 0.3014
  self.pid = os.fork()[00:00<?, ?it/s]
                                      /usr/lib/python3.10/multiprocessing/popen_fork.py:66: RuntimeWarning: os.fork() was called. os.fork() is incompatible with multithreaded code, and JAX is multithreaded, so this will likely lead to a deadlock.
  self.pid = os.fork()[00:00<?, ?it/s]
  5%|▌         | 1/20 [01:35<30:21, 95/usr/lib/python3.10/multiprocessing/popen_fork.py:66: RuntimeWarning: os.fork() was called. os.fork() is incompatible with multithreaded code, and JAX is multithreaded, so this will likely lead to a deadlock.
  self.pid = os.fork()[00:00<?, ?it/s]






 68%|██████▊   | 57/84 [00:02<00:00, 27.09it/s]
epoch: 1 	loss: 0.001338   	accuracy: 0.8375 	precision: 0.4393 	recall: 0.3352 	f1: 0.3234
epoch: 1 	loss: 0.018713   	accuracy: 0.8024 	precision: 0.2803 	recall: 0.3058 	f1: 0.2925
  self.pid = os.fork()[00:00<?, ?it/s]
                                      /usr/lib/python3.10/multiprocessing/popen_fork.py:66: RuntimeWarning: os.fork() was called. os.fork() is incompatible with multithreaded code, and JAX is multithreaded, so this will likely lead to a deadlock.
  self.pid = os.fork()[00:00<?, ?it/s]
  self.pid = os.fork()[00:00<?, ?it/s]





 82%|████████▏ | 69/84 [00:09<00:01,  7.67it/s]
 64%|██████▍   | 54/84 [00:02<00:01, 27.33it/s]
epoch: 2 	loss: 0.000260   	accuracy: 0.8816 	precision: 0.4499 	recall: 0.4973 	f1: 0.4608
epoch: 2 	loss: 0.027580   	accuracy: 0.8263 	precision: 0.4145 	recall: 0.4200 	f1: 0.4007
  self.pid = os.fork()[00:00<?, ?it/s]
                                      /usr/lib/python3.10/multiprocessing/popen_fork.py:66: RuntimeWarning: os.fork() was called. os.fork() is incompatible with multithreaded code, and JAX is multithreaded, so this will likely lead to a deadlock.
  self.pid = os.fork()[00:00<?, ?it/s]
  self.pid = os.fork()[00:00<?, ?it/s]






  self.pid = os.fork()[00:00<?, ?it/s]
                                      /usr/lib/python3.10/multiprocessing/popen_fork.py:66: RuntimeWarning: os.fork() was called. os.fork() is incompatible with multithreaded code, and JAX is multithreaded, so this will likely lead to a deadlock.
  self.pid = os.fork()[00:00<?, ?it/s]
 45%|████▌     | 5/11 [00:00<00:00, 17.61it/s]
epoch: 3 	loss: 0.000188   	accuracy: 0.9146 	precision: 0.6106 	recall: 0.5853 	f1: 0.5966
epoch: 3 	loss: 0.024260   	accuracy: 0.8683 	precision: 0.6989 	recall: 0.5896 	f1: 0.6100
  self.pid = os.fork()[00:00<?, ?it/s]






  self.pid = os.fork()[00:00<?, ?it/s]
                                      /usr/lib/python3.10/multiprocessing/popen_fork.py:66: RuntimeWarning: os.fork() was called. os.fork() is incompatible with multithreaded code, and JAX is multithreaded, so this will likely lead to a deadlock.
  self.pid = os.fork()[00:00<?, ?it/s]
 45%|████▌     | 5/11 [00:00<00:00, 17.79it/s]
epoch: 4 	loss: 0.000073   	accuracy: 0.9573 	precision: 0.7385 	recall: 0.7365 	f1: 0.7370
epoch: 4 	loss: 0.037281   	accuracy: 0.8743 	precision: 0.6600 	recall: 0.6746 	f1: 0.6519
  self.pid = os.fork()[00:00<?, ?it/s]






  self.pid = os.fork()[00:00<?, ?it/s]
                                      /usr/lib/python3.10/multiprocessing/popen_fork.py:66: RuntimeWarning: os.fork() was called. os.fork() is incompatible with multithreaded code, and JAX is multithreaded, so this will likely lead to a deadlock.
  self.pid = os.fork()[00:00<?, ?it/s]
  9%|▉         | 1/11 [00:00<00:02,  4.08it/s]
epoch: 5 	loss: 0.000050   	accuracy: 0.9558 	precision: 0.7363 	recall: 0.7171 	f1: 0.7263
epoch: 5 	loss: 0.036818   	accuracy: 0.8563 	precision: 0.5614 	recall: 0.5533 	f1: 0.5565
  self.pid = os.fork()[00:00<?, ?it/s]






  self.pid = os.fork()[00:00<?, ?it/s]
                                      /usr/lib/python3.10/multiprocessing/popen_fork.py:66: RuntimeWarning: os.fork() was called. os.fork() is incompatible with multithreaded code, and JAX is multithreaded, so this will likely lead to a deadlock.
  self.pid = os.fork()[00:00<?, ?it/s]
 45%|████▌     | 5/11 [00:00<00:00, 17.82it/s]
epoch: 6 	loss: 0.000024   	accuracy: 0.9655 	precision: 0.7476 	recall: 0.7589 	f1: 0.7518
epoch: 6 	loss: 0.041054   	accuracy: 0.8802 	precision: 0.6006 	recall: 0.6392 	f1: 0.6120
  self.pid = os.fork()[00:00<?, ?it/s]






  self.pid = os.fork()[00:00<?, ?it/s]
                                      /usr/lib/python3.10/multiprocessing/popen_fork.py:66: RuntimeWarning: os.fork() was called. os.fork() is incompatible with multithreaded code, and JAX is multithreaded, so this will likely lead to a deadlock.
  self.pid = os.fork()[00:00<?, ?it/s]
 82%|████████▏ | 9/11 [00:00<00:00, 24.85it/s]
epoch: 7 	loss: 0.000019   	accuracy: 0.9730 	precision: 0.9813 	recall: 0.8877 	f1: 0.9253
epoch: 7 	loss: 0.060222   	accuracy: 0.8743 	precision: 0.6371 	recall: 0.6887 	f1: 0.6339
  self.pid = os.fork()[00:00<?, ?it/s]






 69%|██████▉   | 58/84 [00:02<00:00, 28.59it/s]
epoch: 8 	loss: 0.000021   	accuracy: 0.9798 	precision: 0.9725 	recall: 0.8517 	f1: 0.8833
epoch: 8 	loss: 0.038512   	accuracy: 0.8743 	precision: 0.6336 	recall: 0.6746 	f1: 0.6251
  self.pid = os.fork()[00:00<?, ?it/s]
                                      /usr/lib/python3.10/multiprocessing/popen_fork.py:66: RuntimeWarning: os.fork() was called. os.fork() is incompatible with multithreaded code, and JAX is multithreaded, so this will likely lead to a deadlock.
  self.pid = os.fork()[00:00<?, ?it/s]
 45%|████▌     | 9/20 [03:44<03:11, 17/usr/lib/python3.10/multiprocessing/popen_fork.py:66: RuntimeWarning: os.fork() was called. os.fork() is incompatible with multithreaded code, and JAX is multithreaded, so this will likely lead to a deadlock.
  self.pid = os.fork()[00:00<?, ?it/s]






 76%|███████▌  | 64/84 [00:02<00:00, 28.57it/s]
epoch: 9 	loss: 0.000020   	accuracy: 0.9880 	precision: 0.9466 	recall: 0.9783 	f1: 0.9602
epoch: 9 	loss: 0.033326   	accuracy: 0.8623 	precision: 0.7394 	recall: 0.7200 	f1: 0.7021
  self.pid = os.fork()[00:00<?, ?it/s]
                                      /usr/lib/python3.10/multiprocessing/popen_fork.py:66: RuntimeWarning: os.fork() was called. os.fork() is incompatible with multithreaded code, and JAX is multithreaded, so this will likely lead to a deadlock.
  self.pid = os.fork()[00:00<?, ?it/s]
 50%|█████     | 10/20 [04:00<02:50, 1/usr/lib/python3.10/multiprocessing/popen_fork.py:66: RuntimeWarning: os.fork() was called. os.fork() is incompatible with multithreaded code, and JAX is multithreaded, so this will likely lead to a deadlock.
  self.pid = os.fork()[00:00<?, ?it/s]






 76%|███████▌  | 64/84 [00:02<00:00, 28.36it/s]
epoch: 10 	loss: 0.000011   	accuracy: 0.9888 	precision: 0.9533 	recall: 0.9364 	f1: 0.9441
epoch: 10 	loss: 0.061025   	accuracy: 0.8563 	precision: 0.6276 	recall: 0.6467 	f1: 0.5936
  self.pid = os.fork()[00:00<?, ?it/s]
                                      /usr/lib/python3.10/multiprocessing/popen_fork.py:66: RuntimeWarning: os.fork() was called. os.fork() is incompatible with multithreaded code, and JAX is multithreaded, so this will likely lead to a deadlock.
  self.pid = os.fork()[00:00<?, ?it/s]
 55%|█████▌    | 11/20 [04:16<02:29, 1/usr/lib/python3.10/multiprocessing/popen_fork.py:66: RuntimeWarning: os.fork() was called. os.fork() is incompatible with multithreaded code, and JAX is multithreaded, so this will likely lead to a deadlock.
  self.pid = os.fork()[00:00<?, ?it/s]






 83%|████████▎ | 70/84 [00:02<00:00, 30.42it/s]
epoch: 11 	loss: 0.000010   	accuracy: 0.9933 	precision: 0.9675 	recall: 0.9917 	f1: 0.9788
epoch: 11 	loss: 0.045011   	accuracy: 0.8623 	precision: 0.8687 	recall: 0.7154 	f1: 0.7228
  self.pid = os.fork()[00:00<?, ?it/s]
                                      /usr/lib/python3.10/multiprocessing/popen_fork.py:66: RuntimeWarning: os.fork() was called. os.fork() is incompatible with multithreaded code, and JAX is multithreaded, so this will likely lead to a deadlock.
  self.pid = os.fork()[00:00<?, ?it/s]
 60%|██████    | 12/20 [04:32<02:11, 1/usr/lib/python3.10/multiprocessing/popen_fork.py:66: RuntimeWarning: os.fork() was called. os.fork() is incompatible with multithreaded code, and JAX is multithreaded, so this will likely lead to a deadlock.
  self.pid = os.fork()[00:00<?, ?it/s]






 79%|███████▊  | 66/84 [00:02<00:00, 30.31it/s]
epoch: 12 	loss: 0.000010   	accuracy: 0.9940 	precision: 0.9718 	recall: 0.9881 	f1: 0.9793
epoch: 12 	loss: 0.042824   	accuracy: 0.8862 	precision: 0.8714 	recall: 0.7888 	f1: 0.7972
  self.pid = os.fork()[00:00<?, ?it/s]
                                      /usr/lib/python3.10/multiprocessing/popen_fork.py:66: RuntimeWarning: os.fork() was called. os.fork() is incompatible with multithreaded code, and JAX is multithreaded, so this will likely lead to a deadlock.
  self.pid = os.fork()[00:00<?, ?it/s]
 65%|██████▌   | 13/20 [04:48<01:54, 1/usr/lib/python3.10/multiprocessing/popen_fork.py:66: RuntimeWarning: os.fork() was called. os.fork() is incompatible with multithreaded code, and JAX is multithreaded, so this will likely lead to a deadlock.
  self.pid = os.fork()[00:00<?, ?it/s]






 75%|███████▌  | 63/84 [00:02<00:00, 27.86it/s]
epoch: 13 	loss: 0.000008   	accuracy: 0.9940 	precision: 0.9764 	recall: 0.9835 	f1: 0.9792
epoch: 13 	loss: 0.045879   	accuracy: 0.8862 	precision: 0.8714 	recall: 0.7888 	f1: 0.7972
  self.pid = os.fork()[00:00<?, ?it/s]
                                      /usr/lib/python3.10/multiprocessing/popen_fork.py:66: RuntimeWarning: os.fork() was called. os.fork() is incompatible with multithreaded code, and JAX is multithreaded, so this will likely lead to a deadlock.
  self.pid = os.fork()[00:00<?, ?it/s]
 70%|███████   | 14/20 [05:04<01:37, 1/usr/lib/python3.10/multiprocessing/popen_fork.py:66: RuntimeWarning: os.fork() was called. os.fork() is incompatible with multithreaded code, and JAX is multithreaded, so this will likely lead to a deadlock.
  self.pid = os.fork()[00:00<?, ?it/s]
 33%|███▎      | 28/84 [00:04<00:06,  8.55it/s]
 49%|████▉     | 41/84 [00:05<00:07,  5.81it/s]
 68%|██████▊   | 57/84 [00:08<00:03,  7.81it/s]
 86%|████████▌ | 72/84 [00:09<00:01,  8.00it/s]
 13%|█▎        | 11/84 [00:00<00:03, 20.31it/s]
 80%|███████▉  | 67/84 [00:02<00:00, 30.63it/s]
 80%|███████▉  | 67/84 [00:02<00:00, 30.63it/s]
epoch: 14 	loss: 0.000007   	accuracy: 0.9940 	precision: 0.9764 	recall: 0.9835 	f1: 0.9792
epoch: 14 	loss: 0.047577   	accuracy: 0.8862 	precision: 0.8714 	recall: 0.7888 	f1: 0.7972
  self.pid = os.fork()[00:00<?, ?it/s]
 17%|█▋        | 14/84 [00:02<00:09,  7.13it/s]
 35%|███▍      | 29/84 [00:04<00:07,  7.83it/s]
 50%|█████     | 42/84 [00:06<00:08,  4.93it/s]
 69%|██████▉   | 58/84 [00:08<00:03,  7.81it/s]
 88%|████████▊ | 74/84 [00:10<00:01,  8.59it/s]
 19%|█▉        | 16/84 [00:00<00:03, 22.64it/s]
 86%|████████▌ | 72/84 [00:02<00:00, 31.03it/s]
 86%|████████▌ | 72/84 [00:02<00:00, 31.03it/s]
epoch: 15 	loss: 0.000006   	accuracy: 0.9940 	precision: 0.9757 	recall: 0.9842 	f1: 0.9792
  1%|          | 1/84 [00:00<00:28,  2.91it/s]
 17%|█▋        | 14/84 [00:02<00:09,  7.01it/s]
 36%|███▌      | 30/84 [00:04<00:06,  8.19it/s]
 51%|█████     | 43/84 [00:06<00:07,  5.63it/s]
 70%|███████   | 59/84 [00:08<00:03,  8.31it/s]
 89%|████████▉ | 75/84 [00:10<00:01,  8.52it/s]
 20%|██        | 17/84 [00:00<00:02, 23.89it/s]
 88%|████████▊ | 74/84 [00:02<00:00, 32.19it/s]
 88%|████████▊ | 74/84 [00:02<00:00, 32.19it/s]
epoch: 15 	loss: 0.030262   	accuracy: 0.8512 	precision: 0.8661 	recall: 0.7317 	f1: 0.7616
epoch: 16 	loss: 0.000006   	accuracy: 0.9940 	precision: 0.9764 	recall: 0.9835 	f1: 0.9792
epoch: 16 	loss: 0.048767   	accuracy: 0.8862 	precision: 0.8714 	recall: 0.7888 	f1: 0.7972
  2%|▏         | 2/84 [00:00<00:16,  4.98it/s]
 18%|█▊        | 15/84 [00:02<00:10,  6.70it/s]
 36%|███▌      | 30/84 [00:04<00:06,  8.17it/s]
 52%|█████▏    | 44/84 [00:06<00:06,  6.30it/s]
 71%|███████▏  | 60/84 [00:08<00:02,  8.29it/s]
 90%|█████████ | 76/84 [00:10<00:00,  8.15it/s]
 24%|██▍       | 20/84 [00:00<00:02, 23.52it/s]
 93%|█████████▎| 78/84 [00:02<00:00, 32.36it/s]
 93%|█████████▎| 78/84 [00:02<00:00, 32.36it/s]
  4%|▎         | 3/84 [00:00<00:13,  6.01it/s]
  4%|▎         | 3/84 [00:00<00:13,  6.01it/s]
epoch: 17 	loss: 0.049396   	accuracy: 0.8862 	precision: 0.8714 	recall: 0.7888 	f1: 0.7972
 19%|█▉        | 16/84 [00:02<00:10,  6.77it/s]
 37%|███▋      | 31/84 [00:04<00:07,  6.86it/s]
 54%|█████▎    | 45/84 [00:06<00:05,  7.00it/s]
 73%|███████▎  | 61/84 [00:08<00:02,  8.43it/s]
 92%|█████████▏| 77/84 [00:10<00:00,  8.02it/s]
 27%|██▋       | 23/84 [00:01<00:02, 24.13it/s]
 99%|█████████▉| 83/84 [00:03<00:00, 30.94it/s]
 99%|█████████▉| 83/84 [00:03<00:00, 30.94it/s]
epoch: 18 	loss: 0.000005   	accuracy: 0.9940 	precision: 0.9764 	recall: 0.9835 	f1: 0.9792
epoch: 18 	loss: 0.050029   	accuracy: 0.8862 	precision: 0.8714 	recall: 0.7888 	f1: 0.7972
  5%|▍         | 4/84 [00:00<00:12,  6.42it/s]
 20%|██        | 17/84 [00:02<00:09,  7.16it/s]
 38%|███▊      | 32/84 [00:04<00:07,  7.32it/s]
 55%|█████▍    | 46/84 [00:06<00:05,  7.32it/s]
 74%|███████▍  | 62/84 [00:08<00:03,  6.69it/s]
 94%|█████████▍| 79/84 [00:10<00:00,  8.37it/s]
 32%|███▏      | 27/84 [00:01<00:02, 27.29it/s]
  self.pid = os.fork()[00:00<?, ?it/s]
  self.pid = os.fork()[00:00<?, ?it/s]
epoch: 19 	loss: 0.000005   	accuracy: 0.9940 	precision: 0.9757 	recall: 0.9842 	f1: 0.9792
epoch: 19 	loss: 0.049937   	accuracy: 0.8862 	precision: 0.8714 	recall: 0.7888 	f1: 0.7972
  0%|          | 0/11 [00:00<?, ?it/s]/usr/lib/python3.10/multiprocessing/popen_fork.py:66: RuntimeWarning: os.fork() was called. os.fork() is incompatible with multithreaded code, and JAX is multithreaded, so this will likely lead to a deadlock.
No traceback available to show.               /python3.10/multiprocessing/popen_fork.py:66: RuntimeWarning: os.fork() was called. os.fork() is incompatible with multithreaded code, and JAX is multithreaded, so this will likely lead to a deadlock.
No traceback available to show.               /python3.10/multiprocessing/popen_fork.py:66: RuntimeWarning: os.fork() was called. os.fork() is incompatible with multithreaded code, and JAX is multithreaded, so this will likely lead to a deadlock.
OptimizedModule(
  (_orig_mod): BertForSequenceClassification(
    (bert): BertModel(
      (embeddings): BertEmbeddings(
        (word_embeddings): Embedding(32784, 768)
        (position_embeddings): Embedding(512, 768)
        (token_type_embeddings): Embedding(2, 768)
        (LayerNorm): LayerNorm((768,), eps=1e-12, elementwise_affine=True)
        (dropout): Dropout(p=0.1, inplace=False)
      )
      (encoder): BertEncoder(
        (layer): ModuleList(
          (0-11): 12 x BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1, inplace=False)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm((768,), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1, inplace=False)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
              (intermediate_act_fn): GELUActivation()
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm((768,), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
          )
        )
      )
      (pooler): BertPooler(
        (dense): Linear(in_features=768, out_features=768, bias=True)
        (activation): Tanh()
      )
    )
    (dropout): Dropout(p=0.1, inplace=False)
    (classifier): Linear(in_features=768, out_features=5, bias=True)
  )
)
<class 'torch._dynamo.eval_frame.OptimizedModule'>
<class 'transformers.models.bert.modeling_bert.BertForSequenceClassification'>