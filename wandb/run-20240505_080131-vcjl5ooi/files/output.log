
/content/drive/MyDrive/research_discourse_relation/discourse_relation_explainability
/usr/local/lib/python3.10/dist-packages/huggingface_hub/utils/_token.py:88: UserWarning:
The secret `HF_TOKEN` does not exist in your Colab secrets.
To authenticate with the Hugging Face Hub, create a token in your settings tab (https://huggingface.co/settings/tokens), set it as secret in your Google Colab and restart your session.
You will be able to reuse this secret in all of your notebooks.
Please note that authentication is recommended but still optional to access public models or datasets.
  warnings.warn(
num_added_tokens: 16, added_special_tokens: <NOUN>,<PRONOUN>,<ADJECTIVAL-NOUN>,<PRENOUN-ADJECTIVAL>,<ADVERB>,<CONJUNCTION>,<INTERJECTION>,<VERB>,<ADJECTIVE>,<AUXILIARY-VERB>,<PARTICLE>,<PREFIX>,<SUFFIX>,<SYMBOL>,<AUXILIARY-SYMBOL>,<BLANK>
Some weights of BertForSequenceClassification were not initialized from the model checkpoint at cl-tohoku/bert-base-japanese-v3 and are newly initialized: ['classifier.bias', 'classifier.weight']
You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.
/usr/lib/python3.10/multiprocessing/popen_fork.py:66: RuntimeWarning: os.fork() was called. os.fork() is incompatible with multithreaded code, and JAX is multithreaded, so this will likely lead to a deadlock.
  self.pid = os.fork()



  0%|          | 0/11 [00:00<?, ?it/s]/usr/lib/python3.10/multiprocessing/popen_fork.py:66: RuntimeWarning: os.fork() was called. os.fork() is incompatible with multithreaded code, and JAX is multithreaded, so this will likely lead to a deadlock.
  self.pid = os.fork()
  0%|          | 0/20 [00:00<?, ?it/s]/usr/lib/python3.10/multiprocessing/popen_fork.py:66: RuntimeWarning: os.fork() was called. os.fork() is incompatible with multithreaded code, and JAX is multithreaded, so this will likely lead to a deadlock.
  self.pid = os.fork()[00:00<?, ?it/s]
epoch: None 	loss: 0.064803   	accuracy: 0.1257 	precision: 0.1622 	recall: 0.3158 	f1: 0.0973
epoch: None 	loss: 0.082575   	accuracy: 0.1131 	precision: 0.1674 	recall: 0.0893 	f1: 0.0782




  self.pid = os.fork()[00:00<?, ?it/s]
  self.pid = os.fork()[00:00<?, ?it/s]
  self.pid = os.fork()[00:00<?, ?it/s]
  5%|▌         | 1/20 [01:48<34:22, 10/usr/lib/python3.10/multiprocessing/popen_fork.py:66: RuntimeWarning: os.fork() was called. os.fork() is incompatible with multithreaded code, and JAX is multithreaded, so this will likely lead to a deadlock.
  self.pid = os.fork()[00:00<?, ?it/s]
  5%|▍         | 4/84 [00:00<00:12,  6.42it/s]
epoch: 0 	loss: 0.003158   	accuracy: 0.7506 	precision: 0.1501 	recall: 0.2000 	f1: 0.1715
epoch: 0 	loss: 0.028426   	accuracy: 0.7186 	precision: 0.1437 	recall: 0.2000 	f1: 0.1672






  self.pid = os.fork()[00:00<?, ?it/s]
                                      /usr/lib/python3.10/multiprocessing/popen_fork.py:66: RuntimeWarning: os.fork() was called. os.fork() is incompatible with multithreaded code, and JAX is multithreaded, so this will likely lead to a deadlock.
  self.pid = os.fork()[00:00<?, ?it/s]
  self.pid = os.fork()[00:00<?, ?it/s]
 13%|█▎        | 11/84 [00:01<00:10,  6.70it/s]
epoch: 1 	loss: 0.003192   	accuracy: 0.7506 	precision: 0.1501 	recall: 0.2000 	f1: 0.1715
epoch: 1 	loss: 0.029872   	accuracy: 0.7186 	precision: 0.1437 	recall: 0.2000 	f1: 0.1672






  self.pid = os.fork()[00:00<?, ?it/s]
                                      /usr/lib/python3.10/multiprocessing/popen_fork.py:66: RuntimeWarning: os.fork() was called. os.fork() is incompatible with multithreaded code, and JAX is multithreaded, so this will likely lead to a deadlock.
  self.pid = os.fork()[00:00<?, ?it/s]
 15%|█▌        | 3/20 [02:18<10:11, 35/usr/lib/python3.10/multiprocessing/popen_fork.py:66: RuntimeWarning: os.fork() was called. os.fork() is incompatible with multithreaded code, and JAX is multithreaded, so this will likely lead to a deadlock.
  self.pid = os.fork()[00:00<?, ?it/s]
  5%|▍         | 4/84 [00:00<00:12,  6.48it/s]
epoch: 2 	loss: 0.002759   	accuracy: 0.7506 	precision: 0.1501 	recall: 0.2000 	f1: 0.1715
epoch: 2 	loss: 0.023365   	accuracy: 0.7186 	precision: 0.1437 	recall: 0.2000 	f1: 0.1672






  self.pid = os.fork()[00:00<?, ?it/s]
                                      /usr/lib/python3.10/multiprocessing/popen_fork.py:66: RuntimeWarning: os.fork() was called. os.fork() is incompatible with multithreaded code, and JAX is multithreaded, so this will likely lead to a deadlock.
  self.pid = os.fork()[00:00<?, ?it/s]
  self.pid = os.fork()[00:00<?, ?it/s]
 12%|█▏        | 10/84 [00:01<00:11,  6.52it/s]
epoch: 3 	loss: 0.003178   	accuracy: 0.7506 	precision: 0.1501 	recall: 0.2000 	f1: 0.1715
epoch: 3 	loss: 0.030497   	accuracy: 0.7186 	precision: 0.1437 	recall: 0.2000 	f1: 0.1672






  self.pid = os.fork()[00:00<?, ?it/s]
                                      /usr/lib/python3.10/multiprocessing/popen_fork.py:66: RuntimeWarning: os.fork() was called. os.fork() is incompatible with multithreaded code, and JAX is multithreaded, so this will likely lead to a deadlock.
  self.pid = os.fork()[00:00<?, ?it/s]
 25%|██▌       | 5/20 [02:48<05:48, 23/usr/lib/python3.10/multiprocessing/popen_fork.py:66: RuntimeWarning: os.fork() was called. os.fork() is incompatible with multithreaded code, and JAX is multithreaded, so this will likely lead to a deadlock.
  self.pid = os.fork()[00:00<?, ?it/s]
  4%|▎         | 3/84 [00:00<00:13,  5.95it/s]
epoch: 4 	loss: 0.003243   	accuracy: 0.7506 	precision: 0.1501 	recall: 0.2000 	f1: 0.1715
epoch: 4 	loss: 0.030241   	accuracy: 0.7186 	precision: 0.1437 	recall: 0.2000 	f1: 0.1672






  self.pid = os.fork()[00:00<?, ?it/s]
  self.pid = os.fork()[00:00<?, ?it/s]
 30%|███       | 6/20 [03:04<04:48, 20/usr/lib/python3.10/multiprocessing/popen_fork.py:66: RuntimeWarning: os.fork() was called. os.fork() is incompatible with multithreaded code, and JAX is multithreaded, so this will likely lead to a deadlock.
  self.pid = os.fork()[00:00<?, ?it/s]
  7%|▋         | 6/84 [00:01<00:11,  6.82it/s]
epoch: 5 	loss: 0.003216   	accuracy: 0.7506 	precision: 0.1501 	recall: 0.2000 	f1: 0.1715
epoch: 5 	loss: 0.029826   	accuracy: 0.7186 	precision: 0.1437 	recall: 0.2000 	f1: 0.1672






  self.pid = os.fork()[00:00<?, ?it/s]
                                      /usr/lib/python3.10/multiprocessing/popen_fork.py:66: RuntimeWarning: os.fork() was called. os.fork() is incompatible with multithreaded code, and JAX is multithreaded, so this will likely lead to a deadlock.
  self.pid = os.fork()[00:00<?, ?it/s]
 35%|███▌      | 7/20 [03:20<04:06, 19/usr/lib/python3.10/multiprocessing/popen_fork.py:66: RuntimeWarning: os.fork() was called. os.fork() is incompatible with multithreaded code, and JAX is multithreaded, so this will likely lead to a deadlock.
  self.pid = os.fork()[00:00<?, ?it/s]
 10%|▉         | 8/84 [00:01<00:12,  5.89it/s]
epoch: 6 	loss: 0.003294   	accuracy: 0.7506 	precision: 0.1501 	recall: 0.2000 	f1: 0.1715
epoch: 6 	loss: 0.029073   	accuracy: 0.7186 	precision: 0.1437 	recall: 0.2000 	f1: 0.1672






  self.pid = os.fork()[00:00<?, ?it/s]
                                      /usr/lib/python3.10/multiprocessing/popen_fork.py:66: RuntimeWarning: os.fork() was called. os.fork() is incompatible with multithreaded code, and JAX is multithreaded, so this will likely lead to a deadlock.
  self.pid = os.fork()[00:00<?, ?it/s]
 82%|████████▏ | 9/11 [00:00<00:00, 22.85it/s]
epoch: 7 	loss: 0.003321   	accuracy: 0.7506 	precision: 0.1501 	recall: 0.2000 	f1: 0.1715
epoch: 7 	loss: 0.030008   	accuracy: 0.7186 	precision: 0.1437 	recall: 0.2000 	f1: 0.1672
  self.pid = os.fork()[00:00<?, ?it/s]






 76%|███████▌  | 64/84 [00:02<00:00, 31.43it/s]
epoch: 8 	loss: 0.003356   	accuracy: 0.7506 	precision: 0.1501 	recall: 0.2000 	f1: 0.1715
epoch: 8 	loss: 0.030026   	accuracy: 0.7186 	precision: 0.1437 	recall: 0.2000 	f1: 0.1672
  self.pid = os.fork()[00:00<?, ?it/s]
                                      /usr/lib/python3.10/multiprocessing/popen_fork.py:66: RuntimeWarning: os.fork() was called. os.fork() is incompatible with multithreaded code, and JAX is multithreaded, so this will likely lead to a deadlock.
  self.pid = os.fork()[00:00<?, ?it/s]
 45%|████▌     | 9/20 [03:51<03:09, 17/usr/lib/python3.10/multiprocessing/popen_fork.py:66: RuntimeWarning: os.fork() was called. os.fork() is incompatible with multithreaded code, and JAX is multithreaded, so this will likely lead to a deadlock.
  self.pid = os.fork()[00:00<?, ?it/s]






 23%|██▎       | 19/84 [00:00<00:02, 25.66it/s]
epoch: 9 	loss: 0.003398   	accuracy: 0.7506 	precision: 0.1501 	recall: 0.2000 	f1: 0.1715
epoch: 9 	loss: 0.029990   	accuracy: 0.7186 	precision: 0.1437 	recall: 0.2000 	f1: 0.1672
epoch: 9 	loss: 0.040903   	accuracy: 0.6607 	precision: 0.1321 	recall: 0.2000 	f1: 0.1591
                                      /usr/lib/python3.10/multiprocessing/popen_fork.py:66: RuntimeWarning: os.fork() was called. os.fork() is incompatible with multithreaded code, and JAX is multithreaded, so this will likely lead to a deadlock.
  self.pid = os.fork()[00:00<?, ?it/s]
                                      /usr/lib/python3.10/multiprocessing/popen_fork.py:66: RuntimeWarning: os.fork() was called. os.fork() is incompatible with multithreaded code, and JAX is multithreaded, so this will likely lead to a deadlock.
  self.pid = os.fork()[00:00<?, ?it/s]
 50%|█████     | 10/20 [04:07<02:47, 1/usr/lib/python3.10/multiprocessing/popen_fork.py:66: RuntimeWarning: os.fork() was called. os.fork() is incompatible with multithreaded code, and JAX is multithreaded, so this will likely lead to a deadlock.
  self.pid = os.fork()[00:00<?, ?it/s]






  self.pid = os.fork()[00:00<?, ?it/s]
  9%|▉         | 1/11 [00:00<00:02,  4.19it/s]
epoch: 10 	loss: 0.003393   	accuracy: 0.7506 	precision: 0.1501 	recall: 0.2000 	f1: 0.1715
epoch: 10 	loss: 0.030304   	accuracy: 0.7186 	precision: 0.1437 	recall: 0.2000 	f1: 0.1672
  self.pid = os.fork()[00:00<?, ?it/s]
 55%|█████▌    | 11/20 [04:22<02:27, 1/usr/lib/python3.10/multiprocessing/popen_fork.py:66: RuntimeWarning: os.fork() was called. os.fork() is incompatible with multithreaded code, and JAX is multithreaded, so this will likely lead to a deadlock.
  self.pid = os.fork()[00:00<?, ?it/s]






  self.pid = os.fork()[00:00<?, ?it/s]
 73%|███████▎  | 8/11 [00:00<00:00, 21.32it/s]
epoch: 11 	loss: 0.003410   	accuracy: 0.7506 	precision: 0.1501 	recall: 0.2000 	f1: 0.1715
epoch: 11 	loss: 0.030403   	accuracy: 0.7186 	precision: 0.1437 	recall: 0.2000 	f1: 0.1672
  self.pid = os.fork()[00:00<?, ?it/s]
 60%|██████    | 12/20 [04:38<02:09, 1/usr/lib/python3.10/multiprocessing/popen_fork.py:66: RuntimeWarning: os.fork() was called. os.fork() is incompatible with multithreaded code, and JAX is multithreaded, so this will likely lead to a deadlock.
  self.pid = os.fork()[00:00<?, ?it/s]






  self.pid = os.fork()[00:00<?, ?it/s]
                                      /usr/lib/python3.10/multiprocessing/popen_fork.py:66: RuntimeWarning: os.fork() was called. os.fork() is incompatible with multithreaded code, and JAX is multithreaded, so this will likely lead to a deadlock.
  self.pid = os.fork()[00:00<?, ?it/s]
epoch: 12 	loss: 0.003404   	accuracy: 0.7506 	precision: 0.1501 	recall: 0.2000 	f1: 0.1715
epoch: 12 	loss: 0.030535   	accuracy: 0.7186 	precision: 0.1437 	recall: 0.2000 	f1: 0.1672
epoch: 12 	loss: 0.041940   	accuracy: 0.6607 	precision: 0.1321 	recall: 0.2000 	f1: 0.1591
 65%|██████▌   | 13/20 [04:54<01:52, 1/usr/lib/python3.10/multiprocessing/popen_fork.py:66: RuntimeWarning: os.fork() was called. os.fork() is incompatible with multithreaded code, and JAX is multithreaded, so this will likely lead to a deadlock.
  self.pid = os.fork()[00:00<?, ?it/s]






  self.pid = os.fork()[00:00<?, ?it/s]
                                      /usr/lib/python3.10/multiprocessing/popen_fork.py:66: RuntimeWarning: os.fork() was called. os.fork() is incompatible with multithreaded code, and JAX is multithreaded, so this will likely lead to a deadlock.
  self.pid = os.fork()[00:00<?, ?it/s]
 45%|████▌     | 5/11 [00:00<00:00, 15.74it/s]
epoch: 13 	loss: 0.003412   	accuracy: 0.7506 	precision: 0.1501 	recall: 0.2000 	f1: 0.1715
epoch: 13 	loss: 0.030573   	accuracy: 0.7186 	precision: 0.1437 	recall: 0.2000 	f1: 0.1672
  self.pid = os.fork()[00:00<?, ?it/s]
 30%|██▉       | 25/84 [00:03<00:07,  8.21it/s]
 48%|████▊     | 40/84 [00:05<00:05,  7.79it/s]
 67%|██████▋   | 56/84 [00:07<00:03,  7.93it/s]
 86%|████████▌ | 72/84 [00:09<00:01,  8.21it/s]
  6%|▌         | 5/84 [00:00<00:05, 14.95it/s]
 79%|███████▊  | 66/84 [00:02<00:00, 32.37it/s]
  self.pid = os.fork()[00:00<?, ?it/s]
  self.pid = os.fork()[00:00<?, ?it/s]
epoch: 14 	loss: 0.003402   	accuracy: 0.7506 	precision: 0.1501 	recall: 0.2000 	f1: 0.1715
epoch: 14 	loss: 0.030747   	accuracy: 0.7186 	precision: 0.1437 	recall: 0.2000 	f1: 0.1672
 17%|█▋        | 14/84 [00:02<00:09,  7.39it/s]
 36%|███▌      | 30/84 [00:04<00:06,  8.49it/s]
 51%|█████     | 43/84 [00:06<00:06,  5.92it/s]
 71%|███████▏  | 60/84 [00:08<00:02,  8.33it/s]
 90%|█████████ | 76/84 [00:10<00:00,  8.41it/s]
 26%|██▌       | 22/84 [00:00<00:02, 26.69it/s]
  self.pid = os.fork()[00:00<?, ?it/s]
  self.pid = os.fork()[00:00<?, ?it/s]
epoch: 15 	loss: 0.003430   	accuracy: 0.7506 	precision: 0.1501 	recall: 0.2000 	f1: 0.1715
epoch: 15 	loss: 0.030644   	accuracy: 0.7186 	precision: 0.1437 	recall: 0.2000 	f1: 0.1672
  5%|▍         | 4/84 [00:00<00:13,  6.13it/s]
 21%|██▏       | 18/84 [00:02<00:08,  7.96it/s]
 39%|███▉      | 33/84 [00:04<00:07,  6.94it/s]
 56%|█████▌    | 47/84 [00:06<00:05,  7.21it/s]
 75%|███████▌  | 63/84 [00:08<00:02,  7.05it/s]
 95%|█████████▌| 80/84 [00:10<00:00,  8.89it/s]
 40%|████      | 34/84 [00:01<00:01, 29.88it/s]
 73%|███████▎  | 8/11 [00:00<00:00, 22.01it/s]
 73%|███████▎  | 8/11 [00:00<00:00, 22.01it/s]
epoch: 16 	loss: 0.003443   	accuracy: 0.7506 	precision: 0.1501 	recall: 0.2000 	f1: 0.1715
epoch: 16 	loss: 0.030658   	accuracy: 0.7186 	precision: 0.1437 	recall: 0.2000 	f1: 0.1672
  8%|▊         | 7/84 [00:01<00:10,  7.21it/s]
 25%|██▌       | 21/84 [00:03<00:08,  7.11it/s]
 44%|████▍     | 37/84 [00:05<00:05,  8.03it/s]
 62%|██████▏   | 52/84 [00:07<00:03,  8.21it/s]
 81%|████████  | 68/84 [00:09<00:01,  8.40it/s]
  0%|          | 0/84 [00:00<?, ?it/s]
 60%|█████▉    | 50/84 [00:01<00:01, 31.32it/s]
 82%|████████▏ | 9/11 [00:00<00:00, 25.07it/s]
 82%|████████▏ | 9/11 [00:00<00:00, 25.07it/s]
epoch: 17 	loss: 0.003467   	accuracy: 0.7506 	precision: 0.1501 	recall: 0.2000 	f1: 0.1715
epoch: 17 	loss: 0.030563   	accuracy: 0.7186 	precision: 0.1437 	recall: 0.2000 	f1: 0.1672
 13%|█▎        | 11/84 [00:01<00:11,  6.33it/s]
 31%|███       | 26/84 [00:03<00:06,  8.39it/s]
 48%|████▊     | 40/84 [00:05<00:05,  7.71it/s]
 67%|██████▋   | 56/84 [00:07<00:03,  7.70it/s]
 86%|████████▌ | 72/84 [00:09<00:01,  8.14it/s]
 12%|█▏        | 10/84 [00:00<00:03, 20.31it/s]
 64%|██████▍   | 54/84 [00:02<00:00, 31.38it/s]
 64%|██████▍   | 54/84 [00:02<00:00, 31.38it/s]

epoch: 18 	loss: 0.003500   	accuracy: 0.7506 	precision: 0.1501 	recall: 0.2000 	f1: 0.1715
epoch: 18 	loss: 0.030451   	accuracy: 0.7186 	precision: 0.1437 	recall: 0.2000 	f1: 0.1672
 95%|█████████▌| 19/20 [06:27<00:15, 1/usr/lib/python3.10/multiprocessing/popen_fork.py:66: RuntimeWarning: os.fork() was called. os.fork() is incompatible with multithreaded code, and JAX is multithreaded, so this will likely lead to a deadlock.
 14%|█▍        | 12/84 [00:01<00:10,  6.74it/s]
 14%|█▍        | 12/84 [00:01<00:10,  6.74it/s]
 14%|█▍        | 12/84 [00:01<00:10,  6.74it/s]
 14%|█▍        | 12/84 [00:01<00:10,  6.74it/s]
 14%|█▍        | 12/84 [00:01<00:10,  6.74it/s]
 14%|█▍        | 12/84 [00:01<00:10,  6.74it/s]
 14%|█▍        | 12/84 [00:01<00:10,  6.74it/s]
 14%|█▍        | 12/84 [00:01<00:10,  6.74it/s]
 14%|█▍        | 12/84 [00:01<00:10,  6.74it/s]
 14%|█▍        | 12/84 [00:01<00:10,  6.74it/s]
 14%|█▍        | 12/84 [00:01<00:10,  6.74it/s]
 14%|█▍        | 12/84 [00:01<00:10,  6.74it/s]
 14%|█▍        | 12/84 [00:01<00:10,  6.74it/s]
 14%|█▍        | 12/84 [00:01<00:10,  6.74it/s]
 14%|█▍        | 12/84 [00:01<00:10,  6.74it/s]
 14%|█▍        | 12/84 [00:01<00:10,  6.74it/s]
 14%|█▍        | 12/84 [00:01<00:10,  6.74it/s]
 14%|█▍        | 12/84 [00:01<00:10,  6.74it/s]
 14%|█▍        | 12/84 [00:01<00:10,  6.74it/s]
 14%|█▍        | 12/84 [00:01<00:10,  6.74it/s]
 14%|█▍        | 12/84 [00:01<00:10,  6.74it/s]
 14%|█▍        | 12/84 [00:01<00:10,  6.74it/s]
 14%|█▍        | 12/84 [00:01<00:10,  6.74it/s]
 14%|█▍        | 12/84 [00:01<00:10,  6.74it/s]
 32%|███▏      | 27/84 [00:03<00:06,  8.37it/s]
 49%|████▉     | 41/84 [00:05<00:07,  6.05it/s]
 68%|██████▊   | 57/84 [00:07<00:03,  8.06it/s]
 87%|████████▋ | 73/84 [00:09<00:01,  8.47it/s]
 12%|█▏        | 10/84 [00:00<00:03, 20.32it/s]
 89%|████████▉ | 75/84 [00:02<00:00, 34.15it/s]
 89%|████████▉ | 75/84 [00:02<00:00, 34.15it/s]
epoch: 19 	loss: 0.003525   	accuracy: 0.7506 	precision: 0.1501 	recall: 0.2000 	f1: 0.1715
epoch: 19 	loss: 0.030371   	accuracy: 0.7186 	precision: 0.1437 	recall: 0.2000 	f1: 0.1672
 45%|████▌     | 5/11 [00:00<00:00, 16.18it/s]/python3.10/multiprocessing/popen_fork.py:66: RuntimeWarning: os.fork() was called. os.fork() is incompatible with multithreaded code, and JAX is multithreaded, so this will likely lead to a deadlock.
No traceback available to show.                python3.10/multiprocessing/popen_fork.py:66: RuntimeWarning: os.fork() was called. os.fork() is incompatible with multithreaded code, and JAX is multithreaded, so this will likely lead to a deadlock.
No traceback available to show.                python3.10/multiprocessing/popen_fork.py:66: RuntimeWarning: os.fork() was called. os.fork() is incompatible with multithreaded code, and JAX is multithreaded, so this will likely lead to a deadlock.
OptimizedModule(
  (_orig_mod): BertForSequenceClassification(
    (bert): BertModel(
      (embeddings): BertEmbeddings(
        (word_embeddings): Embedding(32784, 768)
        (position_embeddings): Embedding(512, 768)
        (token_type_embeddings): Embedding(2, 768)
        (LayerNorm): LayerNorm((768,), eps=1e-12, elementwise_affine=True)
        (dropout): Dropout(p=0.1, inplace=False)
      )
      (encoder): BertEncoder(
        (layer): ModuleList(
          (0-11): 12 x BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1, inplace=False)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm((768,), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1, inplace=False)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
              (intermediate_act_fn): GELUActivation()
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm((768,), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
          )
        )
      )
      (pooler): BertPooler(
        (dense): Linear(in_features=768, out_features=768, bias=True)
        (activation): Tanh()
      )
    )
    (dropout): Dropout(p=0.1, inplace=False)
    (classifier): Linear(in_features=768, out_features=5, bias=True)
  )
)
<class 'torch._dynamo.eval_frame.OptimizedModule'>
<class 'transformers.models.bert.modeling_bert.BertForSequenceClassification'>