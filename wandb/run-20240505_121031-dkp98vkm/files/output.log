/content/drive/MyDrive/research_discourse_relation/discourse_relation_explainability
num_added_tokens: 16, added_special_tokens: <NOUN>,<PRONOUN>,<ADJECTIVAL-NOUN>,<PRENOUN-ADJECTIVAL>,<ADVERB>,<CONJUNCTION>,<INTERJECTION>,<VERB>,<ADJECTIVE>,<AUXILIARY-VERB>,<PARTICLE>,<PREFIX>,<SUFFIX>,<SYMBOL>,<AUXILIARY-SYMBOL>,<BLANK>
Some weights of BertForSequenceClassification were not initialized from the model checkpoint at cl-tohoku/bert-base-japanese-v3 and are newly initialized: ['classifier.bias', 'classifier.weight']
You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.
  0%|          | 0/11 [00:00<?, ?it/s]/usr/lib/python3.10/multiprocessing/popen_fork.py:66: RuntimeWarning: os.fork() was called. os.fork() is incompatible with multithreaded code, and JAX is multithreaded, so this will likely lead to a deadlock.
  self.pid = os.fork()
  0%|          | 0/11 [00:00<?, ?it/s]/usr/lib/python3.10/multiprocessing/popen_fork.py:66: RuntimeWarning: os.fork() was called. os.fork() is incompatible with multithreaded code, and JAX is multithreaded, so this will likely lead to a deadlock.
  self.pid = os.fork()
  0%|          | 0/15 [00:00<?, ?it/s]/usr/lib/python3.10/multiprocessing/popen_fork.py:66: RuntimeWarning: os.fork() was called. os.fork() is incompatible with multithreaded code, and JAX is multithreaded, so this will likely lead to a deadlock.
  self.pid = os.fork()[00:00<?, ?it/s]
epoch: None 	loss: 0.065450   	accuracy: 0.1737 	precision: 0.2217 	recall: 0.2554 	f1: 0.1006
epoch: None 	loss: 0.075550   	accuracy: 0.2321 	precision: 0.1715 	recall: 0.2667 	f1: 0.1020





  self.pid = os.fork()[00:00<?, ?it/s]
  self.pid = os.fork()[00:00<?, ?it/s]
                                      /usr/lib/python3.10/multiprocessing/popen_fork.py:66: RuntimeWarning: os.fork() was called. os.fork() is incompatible with multithreaded code, and JAX is multithreaded, so this will likely lead to a deadlock.
  self.pid = os.fork()[00:00<?, ?it/s]
  0%|          | 0/15 [01:32<?, ?it/s]
epoch: 0 	loss: 0.001851   	accuracy: 0.7948 	precision: 0.2715 	recall: 0.3072 	f1: 0.2877
epoch: 0 	loss: 0.028214   	accuracy: 0.7844 	precision: 0.2817 	recall: 0.3192 	f1: 0.2987
  7%|▋         | 1/15 [01:32<21:40, 92/usr/lib/python3.10/multiprocessing/popen_fork.py:66: RuntimeWarning: os.fork() was called. os.fork() is incompatible with multithreaded code, and JAX is multithreaded, so this will likely lead to a deadlock.
  self.pid = os.fork()[00:00<?, ?it/s]






  self.pid = os.fork()[00:00<?, ?it/s]
                                      /usr/lib/python3.10/multiprocessing/popen_fork.py:66: RuntimeWarning: os.fork() was called. os.fork() is incompatible with multithreaded code, and JAX is multithreaded, so this will likely lead to a deadlock.
  self.pid = os.fork()[00:00<?, ?it/s]
 13%|█▎        | 2/15 [01:48<10:13, 47/usr/lib/python3.10/multiprocessing/popen_fork.py:66: RuntimeWarning: os.fork() was called. os.fork() is incompatible with multithreaded code, and JAX is multithreaded, so this will likely lead to a deadlock.
  self.pid = os.fork()[00:00<?, ?it/s]
  2%|▏         | 2/84 [00:00<00:16,  4.83it/s]
epoch: 1 	loss: 0.001407   	accuracy: 0.8397 	precision: 0.4945 	recall: 0.3200 	f1: 0.3155
epoch: 1 	loss: 0.017131   	accuracy: 0.7964 	precision: 0.2870 	recall: 0.2858 	f1: 0.2821






  self.pid = os.fork()[00:00<?, ?it/s]
  self.pid = os.fork()[00:00<?, ?it/s]
 20%|██        | 3/15 [02:03<06:33, 32/usr/lib/python3.10/multiprocessing/popen_fork.py:66: RuntimeWarning: os.fork() was called. os.fork() is incompatible with multithreaded code, and JAX is multithreaded, so this will likely lead to a deadlock.
  self.pid = os.fork()[00:00<?, ?it/s]
  6%|▌         | 5/84 [00:00<00:12,  6.43it/s]
epoch: 2 	loss: 0.001084   	accuracy: 0.8794 	precision: 0.4540 	recall: 0.4772 	f1: 0.4653
epoch: 2 	loss: 0.024742   	accuracy: 0.8443 	precision: 0.4713 	recall: 0.4525 	f1: 0.4584






  self.pid = os.fork()[00:00<?, ?it/s]
                                      /usr/lib/python3.10/multiprocessing/popen_fork.py:66: RuntimeWarning: os.fork() was called. os.fork() is incompatible with multithreaded code, and JAX is multithreaded, so this will likely lead to a deadlock.
  self.pid = os.fork()[00:00<?, ?it/s]
epoch: 3 	loss: 0.000297   	accuracy: 0.9041 	precision: 0.6599 	recall: 0.5555 	f1: 0.5048
epoch: 3 	loss: 0.022791   	accuracy: 0.8563 	precision: 0.4307 	recall: 0.5304 	f1: 0.4615
epoch: 3 	loss: 0.010539   	accuracy: 0.8631 	precision: 0.4671 	recall: 0.5143 	f1: 0.4835
 27%|██▋       | 4/15 [02:19<04:47, 26/usr/lib/python3.10/multiprocessing/popen_fork.py:66: RuntimeWarning: os.fork() was called. os.fork() is incompatible with multithreaded code, and JAX is multithreaded, so this will likely lead to a deadlock.
  self.pid = os.fork()[00:00<?, ?it/s]






  self.pid = os.fork()[00:00<?, ?it/s]
                                      /usr/lib/python3.10/multiprocessing/popen_fork.py:66: RuntimeWarning: os.fork() was called. os.fork() is incompatible with multithreaded code, and JAX is multithreaded, so this will likely lead to a deadlock.
  self.pid = os.fork()[00:00<?, ?it/s]
epoch: 4 	loss: 0.000089   	accuracy: 0.9431 	precision: 0.7340 	recall: 0.6432 	f1: 0.6812
 33%|███▎      | 5/15 [02:35<03:43, 22/usr/lib/python3.10/multiprocessing/popen_fork.py:66: RuntimeWarning: os.fork() was called. os.fork() is incompatible with multithreaded code, and JAX is multithreaded, so this will likely lead to a deadlock.
  self.pid = os.fork()[00:00<?, ?it/s]
  8%|▊         | 7/84 [00:01<00:10,  7.23it/s]
epoch: 4 	loss: 0.049455   	accuracy: 0.8144 	precision: 0.4529 	recall: 0.3700 	f1: 0.3957






  self.pid = os.fork()[00:00<?, ?it/s]
  self.pid = os.fork()[00:00<?, ?it/s]
 40%|████      | 6/15 [02:51<03:02, 20/usr/lib/python3.10/multiprocessing/popen_fork.py:66: RuntimeWarning: os.fork() was called. os.fork() is incompatible with multithreaded code, and JAX is multithreaded, so this will likely lead to a deadlock.
  self.pid = os.fork()[00:00<?, ?it/s]
  6%|▌         | 5/84 [00:00<00:12,  6.14it/s]
epoch: 5 	loss: 0.000040   	accuracy: 0.9655 	precision: 0.9585 	recall: 0.7729 	f1: 0.7954
epoch: 5 	loss: 0.050610   	accuracy: 0.8263 	precision: 0.5290 	recall: 0.5079 	f1: 0.4821






  self.pid = os.fork()[00:00<?, ?it/s]
  self.pid = os.fork()[00:00<?, ?it/s]
 47%|████▋     | 7/15 [03:08<02:32, 19/usr/lib/python3.10/multiprocessing/popen_fork.py:66: RuntimeWarning: os.fork() was called. os.fork() is incompatible with multithreaded code, and JAX is multithreaded, so this will likely lead to a deadlock.
  self.pid = os.fork()[00:00<?, ?it/s]
  2%|▏         | 2/84 [00:00<00:19,  4.21it/s]
epoch: 6 	loss: 0.000031   	accuracy: 0.9835 	precision: 0.9685 	recall: 0.9155 	f1: 0.9376
epoch: 6 	loss: 0.037556   	accuracy: 0.8563 	precision: 0.5636 	recall: 0.6512 	f1: 0.5984







  self.pid = os.fork()[00:00<?, ?it/s]
                                      /usr/lib/python3.10/multiprocessing/popen_fork.py:66: RuntimeWarning: os.fork() was called. os.fork() is incompatible with multithreaded code, and JAX is multithreaded, so this will likely lead to a deadlock.
  self.pid = os.fork()[00:00<?, ?it/s]
 53%|█████▎    | 8/15 [03:24<02:07, 18/usr/lib/python3.10/multiprocessing/popen_fork.py:66: RuntimeWarning: os.fork() was called. os.fork() is incompatible with multithreaded code, and JAX is multithreaded, so this will likely lead to a deadlock.
  self.pid = os.fork()[00:00<?, ?it/s]
epoch: 7 	loss: 0.000022   	accuracy: 0.9760 	precision: 0.9775 	recall: 0.8864 	f1: 0.9225
epoch: 7 	loss: 0.057525   	accuracy: 0.8802 	precision: 0.8522 	recall: 0.7296 	f1: 0.7101
epoch: 7 	loss: 0.000423   	accuracy: 0.8690 	precision: 0.8841 	recall: 0.8535 	f1: 0.8498






  self.pid = os.fork()[00:00<?, ?it/s]
                                      /usr/lib/python3.10/multiprocessing/popen_fork.py:66: RuntimeWarning: os.fork() was called. os.fork() is incompatible with multithreaded code, and JAX is multithreaded, so this will likely lead to a deadlock.
  self.pid = os.fork()[00:00<?, ?it/s]
 60%|██████    | 9/15 [03:40<01:45, 17/usr/lib/python3.10/multiprocessing/popen_fork.py:66: RuntimeWarning: os.fork() was called. os.fork() is incompatible with multithreaded code, and JAX is multithreaded, so this will likely lead to a deadlock.
  self.pid = os.fork()[00:00<?, ?it/s]
epoch: 8 	loss: 0.000020   	accuracy: 0.9843 	precision: 0.9936 	recall: 0.9234 	f1: 0.9546
epoch: 8 	loss: 0.035301   	accuracy: 0.8743 	precision: 0.8416 	recall: 0.6625 	f1: 0.7055
epoch: 8 	loss: 0.003855   	accuracy: 0.8452 	precision: 0.8561 	recall: 0.7014 	f1: 0.7283






  self.pid = os.fork()[00:00<?, ?it/s]
                                      /usr/lib/python3.10/multiprocessing/popen_fork.py:66: RuntimeWarning: os.fork() was called. os.fork() is incompatible with multithreaded code, and JAX is multithreaded, so this will likely lead to a deadlock.
  self.pid = os.fork()[00:00<?, ?it/s]
 67%|██████▋   | 10/15 [03:56<01:25, 1/usr/lib/python3.10/multiprocessing/popen_fork.py:66: RuntimeWarning: os.fork() was called. os.fork() is incompatible with multithreaded code, and JAX is multithreaded, so this will likely lead to a deadlock.
  self.pid = os.fork()[00:00<?, ?it/s]
epoch: 9 	loss: 0.000018   	accuracy: 0.9910 	precision: 0.9471 	recall: 0.9136 	f1: 0.9273
epoch: 9 	loss: 0.033042   	accuracy: 0.8683 	precision: 0.6228 	recall: 0.6496 	f1: 0.5967
epoch: 9 	loss: 0.029117   	accuracy: 0.8393 	precision: 0.6369 	recall: 0.6117 	f1: 0.5861






  self.pid = os.fork()[00:00<?, ?it/s]
                                      /usr/lib/python3.10/multiprocessing/popen_fork.py:66: RuntimeWarning: os.fork() was called. os.fork() is incompatible with multithreaded code, and JAX is multithreaded, so this will likely lead to a deadlock.
  self.pid = os.fork()[00:00<?, ?it/s]
 73%|███████▎  | 11/15 [04:12<01:07, 1/usr/lib/python3.10/multiprocessing/popen_fork.py:66: RuntimeWarning: os.fork() was called. os.fork() is incompatible with multithreaded code, and JAX is multithreaded, so this will likely lead to a deadlock.
  self.pid = os.fork()[00:00<?, ?it/s]
epoch: 10 	loss: 0.000014   	accuracy: 0.9925 	precision: 0.9689 	recall: 0.9590 	f1: 0.9638
epoch: 10 	loss: 0.026262   	accuracy: 0.8623 	precision: 0.9121 	recall: 0.6800 	f1: 0.7625
epoch: 10 	loss: 0.040304   	accuracy: 0.8274 	precision: 0.8505 	recall: 0.6868 	f1: 0.7161






  self.pid = os.fork()[00:00<?, ?it/s]
                                      /usr/lib/python3.10/multiprocessing/popen_fork.py:66: RuntimeWarning: os.fork() was called. os.fork() is incompatible with multithreaded code, and JAX is multithreaded, so this will likely lead to a deadlock.
  self.pid = os.fork()[00:00<?, ?it/s]
 80%|████████  | 12/15 [04:28<00:49, 1/usr/lib/python3.10/multiprocessing/popen_fork.py:66: RuntimeWarning: os.fork() was called. os.fork() is incompatible with multithreaded code, and JAX is multithreaded, so this will likely lead to a deadlock.
  self.pid = os.fork()[00:00<?, ?it/s]
epoch: 11 	loss: 0.000012   	accuracy: 0.9933 	precision: 0.9747 	recall: 0.9840 	f1: 0.9786
epoch: 11 	loss: 0.027517   	accuracy: 0.8623 	precision: 0.8078 	recall: 0.6221 	f1: 0.6603
epoch: 11 	loss: 0.034645   	accuracy: 0.8214 	precision: 0.8458 	recall: 0.6668 	f1: 0.6924






  self.pid = os.fork()[00:00<?, ?it/s]
                                      /usr/lib/python3.10/multiprocessing/popen_fork.py:66: RuntimeWarning: os.fork() was called. os.fork() is incompatible with multithreaded code, and JAX is multithreaded, so this will likely lead to a deadlock.
  self.pid = os.fork()[00:00<?, ?it/s]
 87%|████████▋ | 13/15 [04:44<00:32, 1/usr/lib/python3.10/multiprocessing/popen_fork.py:66: RuntimeWarning: os.fork() was called. os.fork() is incompatible with multithreaded code, and JAX is multithreaded, so this will likely lead to a deadlock.
  self.pid = os.fork()[00:00<?, ?it/s]
epoch: 12 	loss: 0.000011   	accuracy: 0.9933 	precision: 0.9747 	recall: 0.9840 	f1: 0.9786
epoch: 12 	loss: 0.028269   	accuracy: 0.8563 	precision: 0.8102 	recall: 0.6112 	f1: 0.6523
epoch: 12 	loss: 0.035173   	accuracy: 0.8214 	precision: 0.8458 	recall: 0.6668 	f1: 0.6924






  self.pid = os.fork()[00:00<?, ?it/s]
                                      /usr/lib/python3.10/multiprocessing/popen_fork.py:66: RuntimeWarning: os.fork() was called. os.fork() is incompatible with multithreaded code, and JAX is multithreaded, so this will likely lead to a deadlock.
  self.pid = os.fork()[00:00<?, ?it/s]
 93%|█████████▎| 14/15 [05:00<00:16, 1/usr/lib/python3.10/multiprocessing/popen_fork.py:66: RuntimeWarning: os.fork() was called. os.fork() is incompatible with multithreaded code, and JAX is multithreaded, so this will likely lead to a deadlock.
  self.pid = os.fork()[00:00<?, ?it/s]
epoch: 13 	loss: 0.000011   	accuracy: 0.9933 	precision: 0.9747 	recall: 0.9840 	f1: 0.9786
epoch: 13 	loss: 0.028227   	accuracy: 0.8443 	precision: 0.7943 	recall: 0.6079 	f1: 0.6457
epoch: 13 	loss: 0.033884   	accuracy: 0.8214 	precision: 0.8458 	recall: 0.6668 	f1: 0.6924






  self.pid = os.fork()[00:00<?, ?it/s]
                                      /usr/lib/python3.10/multiprocessing/popen_fork.py:66: RuntimeWarning: os.fork() was called. os.fork() is incompatible with multithreaded code, and JAX is multithreaded, so this will likely lead to a deadlock.
  self.pid = os.fork()[00:00<?, ?it/s]
100%|██████████| 15/15 [05:16<00:00, 21.12s/it]
  0%|          | 0/11 [00:00<?, ?it/s]/usr/lib/python3.10/multiprocessing/popen_fork.py:66: RuntimeWarning: os.fork() was called. os.fork() is incompatible with multithreaded code, and JAX is multithreaded, so this will likely lead to a deadlock.
  self.pid = os.fork()
epoch: 14 	loss: 0.000011   	accuracy: 0.9933 	precision: 0.9747 	recall: 0.9840 	f1: 0.9786
epoch: 14 	loss: 0.028751   	accuracy: 0.8443 	precision: 0.7943 	recall: 0.6079 	f1: 0.6457
epoch: 14 	loss: 0.034550   	accuracy: 0.8214 	precision: 0.8458 	recall: 0.6668 	f1: 0.6924
  0%|          | 0/11 [00:00<?, ?it/s]/usr/lib/python3.10/multiprocessing/popen_fork.py:66: RuntimeWarning: os.fork() was called. os.fork() is incompatible with multithreaded code, and JAX is multithreaded, so this will likely lead to a deadlock.
  self.pid = os.fork()
No traceback available to show.
OptimizedModule(
  (_orig_mod): BertForSequenceClassification(
    (bert): BertModel(
      (embeddings): BertEmbeddings(
        (word_embeddings): Embedding(32784, 768)
        (position_embeddings): Embedding(512, 768)
        (token_type_embeddings): Embedding(2, 768)
        (LayerNorm): LayerNorm((768,), eps=1e-12, elementwise_affine=True)
        (dropout): Dropout(p=0.1, inplace=False)
      )
      (encoder): BertEncoder(
        (layer): ModuleList(
          (0-11): 12 x BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1, inplace=False)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm((768,), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1, inplace=False)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
              (intermediate_act_fn): GELUActivation()
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm((768,), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
          )
        )
      )
      (pooler): BertPooler(
        (dense): Linear(in_features=768, out_features=768, bias=True)
        (activation): Tanh()
      )
    )
    (dropout): Dropout(p=0.1, inplace=False)
    (classifier): Linear(in_features=768, out_features=5, bias=True)
  )
)
<class 'torch._dynamo.eval_frame.OptimizedModule'>
<class 'transformers.models.bert.modeling_bert.BertForSequenceClassification'>