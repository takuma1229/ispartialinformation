/content/drive/MyDrive/research_discourse_relation/discourse_relation_explainability
num_added_tokens: 16, added_special_tokens: <NOUN>,<PRONOUN>,<ADJECTIVAL-NOUN>,<PRENOUN-ADJECTIVAL>,<ADVERB>,<CONJUNCTION>,<INTERJECTION>,<VERB>,<ADJECTIVE>,<AUXILIARY-VERB>,<PARTICLE>,<PREFIX>,<SUFFIX>,<SYMBOL>,<AUXILIARY-SYMBOL>,<BLANK>
Some weights of BertForSequenceClassification were not initialized from the model checkpoint at cl-tohoku/bert-base-japanese-v3 and are newly initialized: ['classifier.bias', 'classifier.weight']
You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.
  0%|          | 0/11 [00:00<?, ?it/s]/usr/lib/python3.10/multiprocessing/popen_fork.py:66: RuntimeWarning: os.fork() was called. os.fork() is incompatible with multithreaded code, and JAX is multithreaded, so this will likely lead to a deadlock.
  self.pid = os.fork()
epoch: None 	loss: 0.065450   	accuracy: 0.1737 	precision: 0.2217 	recall: 0.2554 	f1: 0.1006
  0%|          | 0/15 [00:00<?, ?it/s]/usr/lib/python3.10/multiprocessing/popen_fork.py:66: RuntimeWarning: os.fork() was called. os.fork() is incompatible with multithreaded code, and JAX is multithreaded, so this will likely lead to a deadlock.
  self.pid = os.fork()[00:00<?, ?it/s]





 81%|████████  | 68/84 [01:28<00:01,  8.24it/s]
                                      /usr/lib/python3.10/multiprocessing/popen_fork.py:66: RuntimeWarning: os.fork() was called. os.fork() is incompatible with multithreaded code, and JAX is multithreaded, so this will likely lead to a deadlock.
  self.pid = os.fork()[00:00<?, ?it/s]
  self.pid = os.fork()[00:00<?, ?it/s]
  0%|          | 0/15 [01:34<?, ?it/s]
epoch: 0 	loss: 0.001846   	accuracy: 0.7948 	precision: 0.2715 	recall: 0.3072 	f1: 0.2877
  7%|▋         | 1/15 [01:34<22:02, 94/usr/lib/python3.10/multiprocessing/popen_fork.py:66: RuntimeWarning: os.fork() was called. os.fork() is incompatible with multithreaded code, and JAX is multithreaded, so this will likely lead to a deadlock.
  self.pid = os.fork()[00:00<?, ?it/s]






  self.pid = os.fork()[00:00<?, ?it/s]
  7%|▋         | 1/15 [01:50<22:02, 94.47s/it]
epoch: 1 	loss: 0.001417   	accuracy: 0.8277 	precision: 0.4831 	recall: 0.3211 	f1: 0.3052
 13%|█▎        | 2/15 [01:50<10:27, 48/usr/lib/python3.10/multiprocessing/popen_fork.py:66: RuntimeWarning: os.fork() was called. os.fork() is incompatible with multithreaded code, and JAX is multithreaded, so this will likely lead to a deadlock.
  self.pid = os.fork()[00:00<?, ?it/s]






  self.pid = os.fork()[00:00<?, ?it/s]
 20%|██        | 3/15 [02:06<06:40, 33/usr/lib/python3.10/multiprocessing/popen_fork.py:66: RuntimeWarning: os.fork() was called. os.fork() is incompatible with multithreaded code, and JAX is multithreaded, so this will likely lead to a deadlock.
  self.pid = os.fork()[00:00<?, ?it/s]
epoch: 2 	loss: 0.000953   	accuracy: 0.8727 	precision: 0.4526 	recall: 0.4827 	f1: 0.4570
epoch: 2 	loss: 0.026955   	accuracy: 0.8503 	precision: 0.4441 	recall: 0.5058 	f1: 0.4604






  self.pid = os.fork()[00:00<?, ?it/s]
 27%|██▋       | 4/15 [02:21<04:49, 26/usr/lib/python3.10/multiprocessing/popen_fork.py:66: RuntimeWarning: os.fork() was called. os.fork() is incompatible with multithreaded code, and JAX is multithreaded, so this will likely lead to a deadlock.
  self.pid = os.fork()[00:00<?, ?it/s]
  2%|▏         | 2/84 [00:00<00:20,  4.01it/s]
epoch: 3 	loss: 0.000607   	accuracy: 0.8936 	precision: 0.6647 	recall: 0.5374 	f1: 0.4958







  self.pid = os.fork()[00:00<?, ?it/s]
 33%|███▎      | 5/15 [02:37<03:45, 22/usr/lib/python3.10/multiprocessing/popen_fork.py:66: RuntimeWarning: os.fork() was called. os.fork() is incompatible with multithreaded code, and JAX is multithreaded, so this will likely lead to a deadlock.
  self.pid = os.fork()[00:00<?, ?it/s]
  5%|▍         | 4/84 [00:00<00:13,  5.79it/s]
epoch: 4 	loss: 0.000165   	accuracy: 0.9079 	precision: 0.7237 	recall: 0.5686 	f1: 0.5588







  self.pid = os.fork()[00:00<?, ?it/s]
 40%|████      | 6/15 [02:52<03:01, 20/usr/lib/python3.10/multiprocessing/popen_fork.py:66: RuntimeWarning: os.fork() was called. os.fork() is incompatible with multithreaded code, and JAX is multithreaded, so this will likely lead to a deadlock.
  self.pid = os.fork()[00:00<?, ?it/s]
  8%|▊         | 7/84 [00:01<00:11,  6.78it/s]
epoch: 5 	loss: 0.000139   	accuracy: 0.9228 	precision: 0.6694 	recall: 0.5881 	f1: 0.5961






  self.pid = os.fork()[00:00<?, ?it/s]
  self.pid = os.fork()[00:00<?, ?it/s]
  8%|▊         | 7/84 [00:01<00:11,  6.85it/s]
epoch: 6 	loss: 0.000054   	accuracy: 0.9633 	precision: 0.9488 	recall: 0.8397 	f1: 0.8770






  self.pid = os.fork()[00:00<?, ?it/s]
  self.pid = os.fork()[00:00<?, ?it/s]
 10%|▉         | 8/84 [00:01<00:14,  5.39it/s]
epoch: 7 	loss: 0.000042   	accuracy: 0.9685 	precision: 0.9615 	recall: 0.7821 	f1: 0.8032






  self.pid = os.fork()[00:00<?, ?it/s]
 60%|██████    | 9/15 [03:40<01:42, 17/usr/lib/python3.10/multiprocessing/popen_fork.py:66: RuntimeWarning: os.fork() was called. os.fork() is incompatible with multithreaded code, and JAX is multithreaded, so this will likely lead to a deadlock.
  self.pid = os.fork()[00:00<?, ?it/s]
 13%|█▎        | 11/84 [00:01<00:11,  6.21it/s]
epoch: 8 	loss: 0.000032   	accuracy: 0.9858 	precision: 0.9869 	recall: 0.9041 	f1: 0.9367






  self.pid = os.fork()[00:00<?, ?it/s]
 67%|██████▋   | 10/15 [03:56<01:23, 1/usr/lib/python3.10/multiprocessing/popen_fork.py:66: RuntimeWarning: os.fork() was called. os.fork() is incompatible with multithreaded code, and JAX is multithreaded, so this will likely lead to a deadlock.
  self.pid = os.fork()[00:00<?, ?it/s]
epoch: 9 	loss: 0.000046   	accuracy: 0.9918 	precision: 0.9635 	recall: 0.9610 	f1: 0.9622
epoch: 9 	loss: 0.032852   	accuracy: 0.8623 	precision: 0.5756 	recall: 0.6342 	f1: 0.5934






  self.pid = os.fork()[00:00<?, ?it/s]
 73%|███████▎  | 11/15 [04:11<01:05, 1/usr/lib/python3.10/multiprocessing/popen_fork.py:66: RuntimeWarning: os.fork() was called. os.fork() is incompatible with multithreaded code, and JAX is multithreaded, so this will likely lead to a deadlock.
  self.pid = os.fork()[00:00<?, ?it/s]
  4%|▎         | 3/84 [00:00<00:15,  5.13it/s]
epoch: 10 	loss: 0.000019   	accuracy: 0.9933 	precision: 0.9687 	recall: 0.9585 	f1: 0.9636







  self.pid = os.fork()[00:00<?, ?it/s]
 80%|████████  | 12/15 [04:27<00:48, 1/usr/lib/python3.10/multiprocessing/popen_fork.py:66: RuntimeWarning: os.fork() was called. os.fork() is incompatible with multithreaded code, and JAX is multithreaded, so this will likely lead to a deadlock.
  self.pid = os.fork()[00:00<?, ?it/s]
  7%|▋         | 6/84 [00:01<00:12,  6.47it/s]
epoch: 11 	loss: 0.000018   	accuracy: 0.9933 	precision: 0.9691 	recall: 0.9600 	f1: 0.9644







  self.pid = os.fork()[00:00<?, ?it/s]
 87%|████████▋ | 13/15 [04:43<00:32, 1/usr/lib/python3.10/multiprocessing/popen_fork.py:66: RuntimeWarning: os.fork() was called. os.fork() is incompatible with multithreaded code, and JAX is multithreaded, so this will likely lead to a deadlock.
  self.pid = os.fork()[00:00<?, ?it/s]
  8%|▊         | 7/84 [00:01<00:11,  6.72it/s]
epoch: 12 	loss: 0.000016   	accuracy: 0.9940 	precision: 0.9757 	recall: 0.9842 	f1: 0.9792






  self.pid = os.fork()[00:00<?, ?it/s]
  self.pid = os.fork()[00:00<?, ?it/s]
 11%|█         | 9/84 [00:01<00:12,  5.96it/s]
epoch: 13 	loss: 0.000016   	accuracy: 0.9940 	precision: 0.9749 	recall: 0.9850 	f1: 0.9792






  self.pid = os.fork()[00:00<?, ?it/s]
100%|██████████| 15/15 [05:14<00:00, 20.97s/it]
epoch: 14 	loss: 0.000015   	accuracy: 0.9940 	precision: 0.9749 	recall: 0.9850 	f1: 0.9792
epoch: 14 	loss: 0.041523   	accuracy: 0.8323 	precision: 0.5634 	recall: 0.5750 	f1: 0.5515
  0%|          | 0/11 [00:00<?, ?it/s]/usr/lib/python3.10/multiprocessing/popen_fork.py:66: RuntimeWarning: os.fork() was called. os.fork() is incompatible with multithreaded code, and JAX is multithreaded, so this will likely lead to a deadlock.
  self.pid = os.fork()
  0%|          | 0/11 [00:00<?, ?it/s]/usr/lib/python3.10/multiprocessing/popen_fork.py:66: RuntimeWarning: os.fork() was called. os.fork() is incompatible with multithreaded code, and JAX is multithreaded, so this will likely lead to a deadlock.
  self.pid = os.fork()
OptimizedModule(
  (_orig_mod): BertForSequenceClassification(
    (bert): BertModel(
      (embeddings): BertEmbeddings(
        (word_embeddings): Embedding(32784, 768)
        (position_embeddings): Embedding(512, 768)
        (token_type_embeddings): Embedding(2, 768)
        (LayerNorm): LayerNorm((768,), eps=1e-12, elementwise_affine=True)
        (dropout): Dropout(p=0.1, inplace=False)
      )
      (encoder): BertEncoder(
        (layer): ModuleList(
          (0-11): 12 x BertLayer(
            (attention): BertAttention(
              (self): BertSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.1, inplace=False)
              )
              (output): BertSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (LayerNorm): LayerNorm((768,), eps=1e-12, elementwise_affine=True)
                (dropout): Dropout(p=0.1, inplace=False)
              )
            )
            (intermediate): BertIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
              (intermediate_act_fn): GELUActivation()
            )
            (output): BertOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (LayerNorm): LayerNorm((768,), eps=1e-12, elementwise_affine=True)
              (dropout): Dropout(p=0.1, inplace=False)
            )
          )
        )
      )
      (pooler): BertPooler(
        (dense): Linear(in_features=768, out_features=768, bias=True)
        (activation): Tanh()
      )
    )
    (dropout): Dropout(p=0.1, inplace=False)
    (classifier): Linear(in_features=768, out_features=5, bias=True)
  )
)
<class 'torch._dynamo.eval_frame.OptimizedModule'>
<class 'transformers.models.bert.modeling_bert.BertForSequenceClassification'>